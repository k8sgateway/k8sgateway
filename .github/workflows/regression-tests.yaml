name: CI
on:
  push:
    branches:
      - 'master'
  pull_request:
jobs:
  regression_tests:
    name: k8s regression tests (${{matrix.kube-e2e-test-type}}, ${{matrix.xds-relay}})
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        kube-e2e-test-type: ['gateway', 'gloo', 'ingress', 'helm', 'gloomtls', 'glooctl']
        xds-relay: [ 'false' ]
        kube-version: [{ node: 'v1.22.4@sha256:ca3587e6e545a96c07bf82e2c46503d9ef86fc704f44c17577fca7bcabf5f978', kubectl: 'v1.22.4', kind: 'v0.11.1'}]
        include:
          - kube-e2e-test-type: 'gateway'
            xds-relay: 'true'
            kube-version: { node: 'v1.22.4@sha256:ca3587e6e545a96c07bf82e2c46503d9ef86fc704f44c17577fca7bcabf5f978', kubectl: 'v1.22.4', kind: 'v0.11.1'}
    steps:
    - uses: actions/checkout@v3
    - uses: ./.github/actions/regression-tests

  notify_slack:
    runs-on: ubuntu-22.04
    if: ${{ github.event_name == 'pull_request' && failure() }}
    needs: [ regression_tests ]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: 1.18.2
      - uses: actions/download-artifact@v3
      - name: Set pull_request_url
        run: echo "pull_request_url=$(cat ${{ github.event_path }} | jq --raw-output .pull_request._links.html.href)" >> $GITHUB_ENV
      - name: Set direct_message_id
        run: echo "direct_message_id=$(cat ./.github/workflows/notify-on-regression-failure-list.json | jq -r '."${{ github.actor }}"')" >> $GITHUB_ENV
      - name: send slack message
        env:
          PARENT_JOB_URL: ${{ env.pull_request_url }}       # parent job hyperlink
          PREAMBLE: "Your recent Gloo PR regression tests"  # text to hyperlink at start of slack message
          SLACK_CHANNEL: ${{ env.direct_message_id }}       # DM to the user who ran CI
          SLACKBOT_BEARER: ${{ secrets.SLACKBOT_BEARER }}
        run: |
          test_results="$(cat */test-out.json | jq -c --slurp .)"
          echo $test_results
          go run .github/workflows/helpers/notify-from-json.go $test_results