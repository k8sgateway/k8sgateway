name: Nightly Kubernetes Tests

on:
  # https://pubs.opengroup.org/onlinepubs/9699919799/utilities/crontab.html#tag_20_25_07
  # Minute [0,59]
  # Hour [0,23]
  # Day of the month [1,31]
  # Month of the year [1,12]
  # Day of the week ([0,6] with 0=Sunday)
  schedule:
    - cron: "0 5 * * 1-5" # weekdays @ 05:00 UTC, run tests against latest main
  workflow_dispatch:
    inputs:
      branch:
        description: "The branch to run tests against"
        type: choice
        options:
          - main
      kubernetes-end-to-end-run-regex:
        # /tests/kubernetes/e2e/...
        description: "The regex to pass to the Kubernetes e2e tests"
        type: string

env:
  VERSION: '1.0.0-ci1'
  GITHUB_TOKEN: ${{ github.token }}
# The istio version to use for the e2e tests
# TODO(npolshak): Test across multiple versions of Istio
# https://istio.io/latest/docs/releases/supported-releases/#support-status-of-istio-releases
  ISTIO_VERSION: "1.19.9"

jobs:
  end_to_end_tests_main:
    name: End-to-End (branch=main, cluster=${{ matrix.test.cluster-id }})
    runs-on: ubuntu-22.04
    timeout-minutes: 60
    if: ${{ (github.event_name == 'workflow_dispatch' && inputs.branch == 'main') || github.event.schedule == '0 5 * * 1-5' }}
    strategy:
      # Since we are running these on a schedule, there is no value in failing fast
      # In fact, we want to ensure that all tests run, so that we have a clearer picture of which tests are prone to flaking
      fail-fast: false
      matrix:
        # When running the tests at night, there is no value in splitting the tests across multiple clusters and running them in parallel.
        # As a result, we increase the threshold for the tests, since they all run serially on a single cluster
        test:
        - cluster-id: 'cluster_one'
          cluster-node-version: 'v1.28.0@sha256:b7a4cad12c197af3ba43202d3efe03246b3f0793f162afb40a33c923952d5b31'
          kind-version: 'v0.20.0'
          kubectl-version: 'v1.28.4'
          helm-version: 'v3.13.2'
          go-test-args: '-v -timeout=60m'
          go-test-run-regex: ${{ inputs.kubernetes-end-to-end-run-regex }}

    steps:
    - uses: actions/checkout@v3
      with:
        ref: main
    - name: Prep Go Runner
      uses: ./.github/workflows/composite-actions/prep-go-runner
    - id: setup-kind-cluster
      name: Setup KinD Cluster
      uses: ./.github/workflows/composite-actions/setup-kind-cluster
      with:
        cluster-name: kind
        kind-node-version: ${{ matrix.test.cluster-node-version }}
        kind-version: ${{ matrix.test.kind-version }}
        kubectl-version: ${{ matrix.test.kubectl-version }}
        helm-version: ${{ matrix.test.helm-version }}
    - id: run-tests
      uses: ./.github/workflows/composite-actions/kubernetes-e2e-tests
      with:
        cluster-name: kind
        cluster-id: ${{ matrix.test.cluster-id }}
        test-args: ${{ matrix.test.go-test-args }}
        run-regex: ${{ matrix.test.go-test-run-regex }}
    - name: Archive bug report directory on failure
      if: ${{ failure() }}
      uses: actions/upload-artifact@v4
      with:
        name: bug-report
        path: ./_test/bug_report/${{ matrix.test.cluster-id }}

  publish_results:
    runs-on: ubuntu-22.04
    timeout-minutes: 5
    if: ${{ always() }}
    needs:
      - end_to_end_tests_main
    steps:
      - uses: actions/checkout@v3
      - name: compute-preamble
        id: compute-preamble
        shell: bash
        run: |
          echo "SLACK_CHANNEL=C04CJMXAH7A" >> $GITHUB_ENV     #edge-nightly-results by default
          if [[ ${{github.event_name == 'workflow_dispatch'}} = true ]]; then
            trigger="Gloo OSS Manual run"
            branch=${{ inputs.branch }}
            echo "SLACK_CHANNEL=C0314KESVNV" >> $GITHUB_ENV   #slack-integration-testing if manually run
          elif [[ ${{github.event.schedule == '0 5 * * 1-5'}} = true ]]; then
            trigger="Gloo OSS nightlies"
            branch="main"
          fi
          preamble="$trigger ($branch)"
          echo "Setting PREAMBLE as $preamble"
          echo "preamble=$preamble" >> $GITHUB_OUTPUT
      - uses: actions/setup-go@v4
        with:
          # Caching in setup-go is on by default
          # In our prep-go-runner we use a more configurable cache https://github.com/actions/cache
          # In this step, we don't need to store a new cache entry because it runs infrequently and
          # will pollute the cache entries
          cache: false
          go-version-file: go.mod
      - name: Send Slack Message
        env:
          PARENT_JOB_URL: https://github.com/solo-io/gloo/actions/runs/${{github.run_id}} # parent job hyperlink
          PREAMBLE: ${{ steps.compute-preamble.outputs.preamble }}  # text to hyperlink at start of slack message
          SLACKBOT_BEARER: ${{ secrets.SLACKBOT_BEARER }}
        run: |
          go run .github/workflows/helpers/notify/slack.go ${{ toJSON(needs) }}
