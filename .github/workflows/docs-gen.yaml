name: Docs

env:
    SLACK_DEBUG_TESTING: false   # when set to "true", send notifications to #slack-integration-testing.  Otherwise, post to #edge-team-bots
on:
  push:
    branches:
    - 'master'
  pull_request:
    branches:
      - 'master'
  workflow_run:
    workflows: ["security-scan-scheduled"]
    types:
      - completed
jobs:
  prepare_env:
    name: Prepare Environment
    runs-on: ubuntu-22.04
    outputs:
      should-build-docs: ${{ env.BUILD_VALUE }}
      should-pass-docs: ${{ env.PASS_VALUE }}
    steps:
      - id: is-draft-pr
        name: Process draft Pull Requests
        if: ${{ github.event.pull_request.draft }}
        run: |
          echo "true"
        env:
          IS_DRAFT_PR: ${{ toJson(true) }}
      - id: signal-docs-comment
        name: Process comments on Pull Request to signal Docs
        if: ${{ github.event.issue.pull_request }}
        run: echo "${{ contains(github.event.comment.body, '/sig-docs') }}"
        env: 
          SIGNAL_DOCS_COMMENT: ${{ contains(github.event.comment.body, '/sig-docs') }}
      - id: skip-docs-comment
        name: Process comments on Pull Request to skip Docs
        if: ${{ github.event.issue.pull_request }}
        run: echo "${{ contains(github.event.comment.body, '/skip-docs') }}"
        env:
          SKIP_DOCS_COMMENT: ${{ contains(github.event.comment.body, '/skip-docs') }}
      - id: build-docs
        name: Determine whether or not to build docs
        run: |
          should_build=true
          should_pass=false

          is_draft_pr=${{ env.IS_DRAFT_PR }}
          if [[ ! -z $is_draft_pr && $is_draft_pr = true ]] ; then
            should_build=false
          fi

          pr_comment_signal=${{ env.SIGNAL_DOCS_COMMENT }}
          if [[ ! -z $pr_comment_signal && $pr_comment_signal = true ]] ; then
            should_build=true
          fi

          pr_comment_skip=${{ env.SKIP_DOCS_COMMENT }}
          if [[ ! -z $pr_comment_skip && $pr_comment_skip = true ]] ; then
            should_pass=true
          fi

          echo "Should build docs? $should_build"
          echo "Should auto-pass docs? $should_pass"
          echo "$should_build"
          echo "$should_pass"
        env:
          BUILD_VALUE: $should_build
          PASS_VALUE: $should_pass
  build:
    name: Generate versioned docs site
    needs: prepare_env
    if: needs.prepare_env.outputs.should-build-docs == 'true'
    runs-on: ubuntu-22.04
    steps:
    - name: Free disk space
      if: needs.prepare_env.outputs.should-pass-docs != 'true'
      run: |
        echo "Before clearing disk space:"
        df -h

        # https://github.com/actions/virtual-environments/issues/709
        sudo apt-get clean

        # Clean up pre-installed tools
        # https://github.com/actions/virtual-environments/issues/1918
        sudo rm -rf /usr/share/dotnet
        sudo rm -rf /opt/ghc
        sudo rm -rf /usr/local/share/boost
        sudo rm -rf $AGENT_TOOLSDIRECTORY

        echo "After clearing disk space:"
        df -h
    - name: Set up Go
      if: needs.prepare_env.outputs.should-pass-docs != 'true'
      uses: actions/setup-go@v3
      with:
        go-version: 1.18.2
      id: go
    - name: Setup Hugo
      if: needs.prepare_env.outputs.should-pass-docs != 'true'
      uses: peaceiris/actions-hugo@v2
      with:
        hugo-version: '0.69.2'
    - name: Check out code into the Go module directory
      if: needs.prepare_env.outputs.should-pass-docs != 'true'
      uses: actions/checkout@v3
    - name: Detect Community PR
      id: community-pr-check
      if: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name != 'solo-io/gloo' }}
      shell: bash
      run: |
        echo "Pull Request is from a fork. Setting IS_COMMUNITY_PR to true"
        echo "true"
      env:
        IS_COMMUNITY_PR: ${{ toJson(true) }}
    - name: Generate versioned docs site
      if: ${{ !env.IS_COMMUNITY_PR && needs.prepare_env.outputs.should-pass-docs != 'true' }}
      run: make -C docs build-site
      env:
        GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        USE_PR_SHA_AS_MASTER: ${{ github.event_name == 'pull_request' }}
        PULL_REQUEST_SHA: ${{ github.event.pull_request.head.sha }}
    - name: Deploy to Firebase (live docs)
      # Do not publish docs if this workflow was triggered by a pull request
      # Only deploy if this was triggered by a push to master, or a successful trivy workflow_run
      if: ${{ github.event_name != 'pull_request' }}
      uses: FirebaseExtended/action-hosting-deploy@v0
      with:
        repoToken: ${{ secrets.GITHUB_TOKEN }}
        firebaseServiceAccount: ${{ secrets.GC_FIREBASE_GHA_SA_JSON_KEY }}
        projectId: ${{ secrets.GC_FIREBASE_GHA_PROJECT_ID }}
        channelId: live
        entryPoint: ./docs/ci
    - name: Deploy to Firebase (preview)
      # Generate live preview of docs for PRs to master
      if: ${{ github.event_name == 'pull_request' && !env.IS_COMMUNITY_PR && needs.prepare_env.outputs.should-pass-docs != 'true' }}
      uses: FirebaseExtended/action-hosting-deploy@v0
      with:
        repoToken: ${{ secrets.GITHUB_TOKEN }}
        firebaseServiceAccount: ${{ secrets.GC_FIREBASE_GHA_SA_JSON_KEY }}
        projectId: ${{ secrets.GC_FIREBASE_GHA_PROJECT_ID }}
        entryPoint: ./docs/ci
    - name: Notify On Failure
      id: notify-on-failure
      if: ${{ github.event_name != 'pull_request' && failure() }}
      run : |
        curl -X POST\
             -H 'Content-type: application/json'\
             --data '{"text":"Gloo Edge has <https://github.com/solo-io/gloo/actions/runs/${{github.run_id}}|failed a docs build> on `master` branch"}'\
             ${{ env.SLACK_DEBUG_TESTING == true && secrets.SLACK_INTEGRATION_TESTING_WEBHOOK || secrets.EDGE_TEAM_BOTS_WEBHOOK }}
