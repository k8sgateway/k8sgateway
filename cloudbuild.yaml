steps:

# Can create a dep cache by running 'gcloud builds submit . --config=cloudbuild-cache.yaml'
# These two steps should populate the cache
- name: gcr.io/cloud-builders/gsutil
  entrypoint: 'bash'
  args: ['-c', 'mkdir -p ./gopath/pkg/dep && gsutil cat gs://solo-public-cache/gloo/gloo-dep.tar.gz | tar -xzf -']
  id: 'download-untar-dep-cache'
  waitFor: ['-']

# Run dep to set up the project so it can be built and tested
# Dep modifies workspace so that the code is moved into the PROJECT_ROOT
# All steps after this must set GOPATH
- name: 'gcr.io/solo-public/dep:0.1.5'
  args: ['ensure']
  env:
    - 'PROJECT_ROOT=github.com/solo-io/gloo'
    - 'GIT_SSH_CONFIG=FALSE'
  id: 'dep'

- name: 'gcr.io/$PROJECT_ID/go-make:0.1.12'
  args: ['docker']
  env:
    - 'PROJECT_ROOT=github.com/solo-io/gloo'
    - 'GOPATH=/workspace/gopath'
    - 'TAGGED_VERSION=$TAG_NAME'
    - 'BUILD_ID=$BUILD_ID'
    - 'GCLOUD_PROJECT_ID=$PROJECT_ID'
  dir: './gopath/src/github.com/solo-io/gloo'
  waitFor: ['dep']
  id: 'compile'

  # Run regression tests
- name: 'gcr.io/$PROJECT_ID/go-make:0.1.12'
  args: ['build-test-assets']
  env:
    - 'PROJECT_ROOT=github.com/solo-io/gloo'
    - 'GOPATH=/workspace/gopath'
    - 'BUILD_ID=$BUILD_ID'
    - 'GCLOUD_PROJECT_ID=$PROJECT_ID'
    - 'HELM_HOME=/root/.helm'
    - 'TAGGED_VERSION=$TAG_NAME'
  dir: './gopath/src/github.com/solo-io/gloo'
  waitFor: ['compile']
  id: 'build-test-assets'

- name: 'gcr.io/solo-public/go-make:0.1.12'
  args: ['download-glooe-changelog', 'publish-docs', '-B']
  env:
  - 'DOCKER_CONFIG=/workspace/docker-config'
  - 'TAGGED_VERSION=v1.0.0-rc1'
  - 'PROJECT_ROOT=github.com/solo-io/gloo'
  - 'GOPATH=/workspace/gopath'
  - 'GCLOUD_PROJECT_ID=solo-public'
  - 'HELM_HOME=/root/.helm' # tell helm where to find data
  dir: './gopath/src/github.com/solo-io/gloo'
  id: 'release-chart'
  waitFor: ['build-test-assets']


timeout: 4200s
tags: ['gloo']
options:
  machineType: 'N1_HIGHCPU_32'
