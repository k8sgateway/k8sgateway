steps:

- name: 'gcr.io/cloud-builders/wget'
  entrypoint: ./ci/spell.sh
  args: ['check']
  waitFor: ['-']
  env:
  - 'LSCOMMAND=find * -path gopath -prune -o -print'
  id: 'check-spelling'
# Can create a dep cache by running 'gcloud builds submit . --config=cloudbuild-cache.yaml'
# These two steps should populate the cache
- name: gcr.io/cloud-builders/gsutil
  entrypoint: 'bash'
  args: ['-c', 'mkdir -p ./gopath/pkg/dep && gsutil cat gs://solo-public-cache/gloo/gloo-dep.tar.gz | tar -xzf -']
  id: 'download-untar-dep-cache'
  waitFor: ['-']

# Run dep to set up the project so it can be built and tested
# Dep modifies workspace so that the code is moved into the PROJECT_ROOT
# All steps after this must set GOPATH
- name: 'gcr.io/$PROJECT_ID/dep'
  args: ['ensure']
  env:
    - 'PROJECT_ROOT=github.com/solo-io/gloo'
    - 'GIT_SSH_CONFIG=FALSE'
  id: 'dep'

# Run some basic checks on the repo
# 1) check formatting of go files
# 2) ensure that make generated-code produces a clean diff
# 3) ensure that the site is generated with no warnings (strict = true in mkdocs)

# e2e-ginkgo is produced from https://github.com/solo-io/cloud-builders/e2e-ginkgo
# Must set the GOPATH to tell the container the workspace has already been set up (by the dep step above)
- name: 'gcr.io/$PROJECT_ID/e2e-ginkgo'
  env:
  - 'PROJECT_ROOT=github.com/solo-io/gloo'
  - 'GOPATH=/workspace/gopath'
  dir: './gopath/src/github.com/solo-io/gloo'
  entrypoint: make
  args: ['check-format']
  waitFor: ['dep']
  id: 'check-format'
- name: 'gcr.io/$PROJECT_ID/go-make'
  entrypoint: 'bash'
  args: ['ci/check-code-and-docs-gen.sh']
  env:
  - 'PROJECT_ROOT=github.com/solo-io/gloo'
  - 'GOPATH=/workspace/gopath'
  - 'TAGGED_VERSION=$TAG_NAME'
  dir: './gopath/src/github.com/solo-io/gloo'
  waitFor: ['dep']
  id: 'check-code-and-docs-gen'

# Run all the tests with ginkgo -r
# This requires setting up envoy, AWS, helm, and docker
# The e2e-ginkgo container provides everything else needed for running tests
- name: gcr.io/cloud-builders/gsutil
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    ENVOY_VERSION=v$$(head -n1 ./projects/envoyinit/cmd/Dockerfile|cut -d: -f2)
    gsutil cp gs://solo-public-artifacts.solo.io/envoy/$$ENVOY_VERSION/envoy.stripped /workspace/envoy
    chmod +x /workspace/envoy
  waitFor: ['dep']
  dir: './gopath/src/github.com/solo-io/gloo'
  id: 'get-envoy'
- name: gcr.io/cloud-builders/gcloud
  args:
  - kms
  - decrypt
  - --ciphertext-file=./gopath/src/github.com/solo-io/gloo/ci/aws_credentials.enc
  - --plaintext-file=/workspace/aws_credentials
  - --location=global
  - --keyring=build
  - --key=build-key
  waitFor: ['dep']
  id: 'setup-aws-creds'
# Helm related setup
- name: gcr.io/cloud-builders/gsutil
  entrypoint: mkdir
  args: ['-p', './_output/helm']
  dir: './gopath/src/github.com/solo-io/gloo'
  waitFor: ['dep']
  id: 'make-helm-dir'
# sync helm repo data from google cloud bucket
- name: gcr.io/cloud-builders/gsutil
  args:
    - -m
    - rsync
    - -r
    - gs://solo-public-helm/
    - './_output/helm'
  dir: './gopath/src/github.com/solo-io/gloo'
  waitFor: ['make-helm-dir']
  id: 'setup-helm'
# Docker related setup
# grab this container immediately in parallel
- name: 'gcr.io/$PROJECT_ID/e2e-ginkgo'
  entrypoint: ls
  waitFor: ['-']
  id: 'grab-ginkgo-container'

- name: 'gcr.io/$PROJECT_ID/e2e-ginkgo'
  env:
  - 'PROJECT_ROOT=github.com/solo-io/gloo'
  - 'GOPATH=/workspace/gopath'
  - 'ENVOY_BINARY=/workspace/envoy'
  - 'AWS_SHARED_CREDENTIALS_FILE=/workspace/aws_credentials'
  - 'CLOUDSDK_COMPUTE_ZONE=us-central1-a'
  - 'CLOUDSDK_CONTAINER_CLUSTER=test-cluster'
  - 'RUN_KUBE_TESTS=1'
  - 'DOCKER_CONFIG=/workspace/.docker/'
  dir: './gopath/src/github.com/solo-io/gloo'
  args: ['-r', '-failFast', '-p']
  waitFor: ['get-envoy', 'setup-aws-creds', 'setup-helm']
  id: 'test'

# Build everything
# 1) Compile all docker images
# 2) Run make targets to push docker images, compile manifests, produce release artifacts, deploy docs
# 3) Publish helm chart
- name: 'gcr.io/cloud-builders/docker'
  entrypoint: 'bash'
  args: ['-c', 'docker login --username soloiobot --password $$DOCKER_HUB_PASSWORD']
  secretEnv: ['DOCKER_HUB_PASSWORD']
  id: 'docker-login'
  waitFor: ['dep']
- name: 'gcr.io/$PROJECT_ID/go-make'
  args: ['docker']
  env:
    - 'PROJECT_ROOT=github.com/solo-io/gloo'
    - 'GOPATH=/workspace/gopath'
    - 'TAGGED_VERSION=$TAG_NAME'
  dir: './gopath/src/github.com/solo-io/gloo'
  waitFor: ['docker-login']
  id: 'compile'
- name: 'gcr.io/$PROJECT_ID/go-make'
  args: ['docker-push', 'manifest', 'release']
  env:
  - 'TAGGED_VERSION=$TAG_NAME'
  - 'PROJECT_ROOT=github.com/solo-io/gloo'
  - 'GOPATH=/workspace/gopath'
  - 'HELM_HOME=/root/.helm' # tell helm where to find data
  dir: './gopath/src/github.com/solo-io/gloo'
  secretEnv: ['GITHUB_TOKEN']
  id: 'release'
  waitFor: ['compile', 'test']
# Sync helm chart data back to google storage bucket
- name: gcr.io/cloud-builders/gsutil
  args:
    - -m
    - rsync
    - -r
    - './_output/helm'
    - gs://solo-public-helm/
  dir: './gopath/src/github.com/solo-io/gloo'
  waitFor: ['release']
  id: 'set-helm-chart'

secrets:
- kmsKeyName: projects/solo-public/locations/global/keyRings/build/cryptoKeys/build-key
  secretEnv:
    GITHUB_TOKEN: CiQABlzmSYYiveU0gTxGH2139eaBUedjV3vNCxQmJU+nRPlfQ/YSUQCCPGSGzbGp49fwDYuefAx9V94b8mivdp9AqB7zQAa07VtGJmrGdg9ZuhKGFrrgqxwABE0LLVNHyngCSHYSYMH8Vn/mRtT7wQuEHBlKVGtqPw==
    DOCKER_HUB_PASSWORD: CiQABlzmSW0u+qhXDvTCxLnbi09Zm88eCU0wSdvFn1W+6WOpTgQSTgCCPGSGTAlMndrEkYOynPhDzTXrW1q1eAsQYjKOWOwZKodcQZ2WIzdvpOOjv+WrGTssWWg1uPFV4CnajT7DzeNAb7USkla1epatm6OnuQ==

timeout: 6600s
