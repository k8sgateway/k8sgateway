{{- if .Values.gateway.enabled }}
{{- $isUpgrade := .Values.gateway.upgrade }}
{{- range $name, $spec := .Values.gatewayProxies }}
---
apiVersion: apps/v1
{{- if $spec.kind.deployment}}
kind: Deployment
{{- else }}
kind: DaemonSet
{{- end}}
metadata:
  labels:
    app: gloo
    gloo: {{ $name | kebabcase }}
  name: {{ $name | kebabcase }}
  namespace: {{ $.Release.Namespace }}
spec:
  {{- if $spec.kind.deployment}}
  replicas: {{ $spec.kind.deployment.replicas }}
  {{- end}}
  selector:
    matchLabels:
      gloo: {{ $name | kebabcase }}
  template:
    metadata:
      labels:
        gloo: {{ $name | kebabcase }}
        {{- if not $isUpgrade }}
        gateway-proxy: live
        {{- end }}
{{ $annotationExist := false}}
{{- if $spec.podTemplate.extraAnnotations }}
{{ $annotationExist = true}}
      annotations:
      {{- range $key, $value := $spec.podTemplate.extraAnnotations }}
        {{ $key }}: {{ $value | quote }}
      {{- end }}
{{- end }}
{{- if $spec.podTemplate.stats }}
{{- if not $annotationExist }}
      annotations:
{{- end}}
        prometheus.io/path: /metrics
        prometheus.io/port: "8081"
        prometheus.io/scrape: "true"
{{- end}}
    spec:
      containers:
      - args: ["--disable-hot-restart"]
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        image: {{ $spec.podTemplate.image.repository }}:{{ $spec.podTemplate.image.tag }}
        imagePullPolicy: {{ $spec.podTemplate.image.pullPolicy }}
        name: {{ $name | kebabcase }}
        securityContext:
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
            add:
            - NET_BIND_SERVICE
        ports:
        - containerPort: {{ $spec.podTemplate.httpPort }}
          name: http
          protocol: TCP
          {{- if $spec.kind.daemonSet }}
          {{- if $spec.kind.daemonSet.hostPort}}
          hostPort: {{ $spec.podTemplate.httpPort }}
          {{- end}}
          {{- end}}
        - containerPort: {{ $spec.podTemplate.httpsPort }}
          name: https
          protocol: TCP
          {{- if  $spec.kind.daemonSet }}
          {{- if $spec.kind.daemonSet.hostPort}}
          hostPort: {{ $spec.podTemplate.httpsPort }}
          {{- end}}
          {{- end}}
{{- with $spec.podTemplate.extraPorts }}
{{toYaml . | indent 8}}{{- end }}
{{- if $spec.podTemplate.resources }}
        resources:
{{ toYaml $spec.podTemplate.resources | indent 10}}
{{- end}}
        volumeMounts:
        - mountPath: /etc/envoy
          name: envoy-config
      {{- if $spec.kind.daemonSet }}
      {{- if $spec.kind.daemonSet.hostPort}}
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      {{- end}}
      {{- end}}
      {{- if $spec.podTemplate.nodeName }}
      nodeName: {{$spec.podTemplate.nodeName}}
      {{- end }}
      {{- if $spec.podTemplate.nodeSelector }}
      nodeSelector:
      {{- range $key, $value := $spec.podTemplate.nodeSelector }}
        {{ $key }}: {{ $value | quote }}
      {{- end }}
      {{- end }}
      {{- if $spec.podTemplate.tolerations }}
      tolerations:
{{ toYaml $spec.podTemplate.tolerations | indent 6}}
      {{- end }}
      {{- if $spec.podTemplate.image.pullSecret }}
      imagePullSecrets:
        - name: {{ $spec.podTemplate.image.pullSecret }}{{end}}
      volumes:
      - configMap:
          name: {{ $name | kebabcase }}-envoy-config
        name: envoy-config
{{- end }}
{{- end }}