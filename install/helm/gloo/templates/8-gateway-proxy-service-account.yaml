{{- define "gateway.proxyServiceAccountSpec" }}
{{- if .Values.gateway.enabled }}
apiVersion: v1
kind: ServiceAccount
metadata:
{{- if .Values.gateway.proxyServiceAccount.extraAnnotations }}
  annotations:
    {{- range $key, $value := .Values.gateway.proxyServiceAccount.extraAnnotations }}
    {{ $key }}: {{ $value | quote }}
  {{- end }}
{{- end }}
  labels:
    app: gloo
    gloo: gateway-proxy
  name: gateway-proxy
  namespace: {{ $.Release.Namespace }}
{{- if .Values.gateway.proxyServiceAccount.disableAutomount }}
automountServiceAccountToken: false
{{ end }}
{{ end }}
{{- end }} {{/* define "gateway.proxyServiceAccountSpec" */}}
{{/*# To create a single ServiceAccount in each namespace which includes a proxy instance,*/}}
{{/*# we'll build a list of unique namespaces*/}}
{{- $proxyNamespaces := list -}}
{{- range $key, $gatewaySpec := .Values.gatewayProxies -}}
  {{- $ns := $gatewaySpec.namespace | default $.Release.Namespace -}}
  {{- $proxyNamespaces = append $proxyNamespaces $ns -}}
{{- end -}}
{{- $proxyNamespaces = $proxyNamespaces | uniq -}}

{{- $kubeResourceOverride := dict -}}
{{- if .Values.gateway -}}
{{- if .Values.gateway.proxyServiceAccount -}}
{{- $kubeResourceOverride = .Values.gateway.proxyServiceAccount.kubeResourceOverride  -}}
{{- end -}}
{{- end -}}
{{- $ctx := (list . $kubeResourceOverride) }}
{{- $period := .}}
{{- range $namespace := $proxyNamespaces -}}

{{/*{{- template "magda.var_dump" $ctx }}*/}}

{{- include "gloo.util.merge" (list $period ($period.Values.gateway.proxyServiceAccount.kubeResourceOverride ) "gateway.proxyServiceAccountSpec") -}}

{{/*Original include: {{- include "gloo.util.merge" (list . (.Values.gateway.proxyServiceAccount.kubeResourceOverride ) "gateway.proxyServiceAccountSpec") -}}*/}}

{{- end -}}   {{/*range $namespace := $proxyNamespaces | uniq*/}}


{{- define "magda.var_dump" -}}
{{- . | mustToPrettyJson | printf "\nThe JSON output of the dumped var is: \n%s" | fail }}
{{- end -}}