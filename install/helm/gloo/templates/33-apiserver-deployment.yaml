{{- if .Values.apiServer.enable }}
{{- $apiServerImage := .Values.apiServer.deployment.server.image }}
{{- $uiImage := .Values.apiServer.deployment.ui.image }}
{{- $envoyImage := .Values.apiServer.deployment.envoy.image }}
{{- if .Values.global  }}
{{- $apiServerImage = merge .Values.apiServer.deployment.server.image .Values.global.image }}
{{- $uiImage = merge .Values.apiServer.deployment.ui.image .Values.global.image }}
{{- $envoyImage = merge .Values.apiServer.deployment.envoy.image .Values.global.image }}
{{- end }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-server
  namespace: {{ .Release.Namespace }}
  labels:
    app: gloo
    gloo: {{ .Values.apiServer.service.name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      gloo: {{ .Values.apiServer.service.name }}
  template:
    metadata:
      labels:
        gloo: {{ .Values.apiServer.service.name }}
      {{- if .Values.apiServer.deployment.stats }}
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "9091"
        prometheus.io/scrape: "true"
      {{- end}}
    spec:
      serviceAccountName: {{ .Values.apiServer.service.name }}
      containers:
        - name: apiserver-ui
          image: {{template "gloo.image" $uiImage}}
          imagePullPolicy: {{$uiImage.pullPolicy}}
          volumeMounts:
            - name: empty-cache
              mountPath: /var/cache/nginx
            - name: empty-run
              mountPath: /var/run
          ports:
            - name: static
              containerPort: {{.Values.apiServer.deployment.ui.staticPort}}
              protocol: TCP
        - name: apiserver
          image: {{template  "gloo.image" $apiServerImage}}
          imagePullPolicy: {{$apiServerImage.pullPolicy}}
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: GRPC_PORT
              value: '{{ .Values.apiServer.deployment.server.grpcPort }}'
            {{- if .Values.apiServer.deployment.stats }}
            - name: START_STATS_SERVER
              value: "true"
            {{- end}} # stats
            - name: NO_AUTH
              value: "1"
      {{- if .Values.apiServer.enterprise }}
            - name: GLOO_LICENSE_KEY
              valueFrom:
                secretKeyRef:
                  name: license
                  key: license-key
      {{- end}} # .Values.apiServer.enterprise
          ports:
            - name: grpcport
              containerPort: {{.Values.apiServer.deployment.server.grpcPort}}
              protocol: TCP
        - name: gloo-grpcserver-envoy
          image: {{template "gloo.image" $envoyImage}}
          imagePullPolicy: {{ $envoyImage.pullPolicy }}
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            periodSeconds: 10
            initialDelaySeconds: 5
      volumes:
        - name: empty-cache
          emptyDir: {}
        - name: empty-run
          emptyDir: {}
      {{- if $apiServerImage.pullSecret }}
      imagePullSecrets:
        - name: {{ $apiServerImage.pullSecret }}
      {{- end }}
{{- end }} # .Values.apiServer.enable
