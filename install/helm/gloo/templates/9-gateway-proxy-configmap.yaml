{{- if .Values.gateway.enabled }}
{{- range $key, $spec := .Values.gatewayProxies }}
---
# config_map
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ $key }}-envoy-config
  namespace: {{ $.Release.Namespace }}
  labels:
    app: gloo
    gloo: {{ $key }}
data:
{{ if (empty $spec.configMap.data) }}
  envoy.yaml: |
    node:
      cluster: gateway
      id: "{{ "{{" }}.PodName{{ "}}" }}.{{ "{{" }}.PodNamespace{{ "}}" }}"
      metadata:
        # this line must match !
        role: "{{ "{{" }}.PodNamespace{{ "}}" }}~gateway-proxy"
    static_resources:

{{- if $spec.deployment.stats }}
      listeners:
        - name: prometheus_listener
          address:
            socket_address:
              address: 0.0.0.0
              port_value: 8081
          filter_chains:
            - filters:
                - name: envoy.http_connection_manager
                  config:
                    codec_type: auto
                    stat_prefix: prometheus
                    route_config:
                      name: prometheus_route
                      virtual_hosts:
                        - name: prometheus_host
                          domains:
                            - "*"
                          routes:
                            - match:
                                prefix: "/metrics"
                                headers:
                                - name: ":method"
                                  exact_match: GET
                              route:
                                prefix_rewrite: "/stats/prometheus"
                                cluster: admin_port_cluster
                    http_filters:
                      - name: envoy.router
                        config: {}
{{- end}}


      clusters:
      - name: gloo.{{ $.Release.Namespace }}.svc.cluster.local:{{ $.Values.gloo.deployment.xdsPort }}
        alt_stat_name: xds_cluster
        connect_timeout: 5.000s
        load_assignment:
          cluster_name: gloo.{{ $.Release.Namespace }}.svc.cluster.local:{{ $.Values.gloo.deployment.xdsPort }}
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: gloo.{{ $.Release.Namespace }}.svc.cluster.local
                    port_value: {{ $.Values.gloo.deployment.xdsPort }}
        http2_protocol_options: {}
        upstream_connection_options:
          tcp_keepalive: {}
        type: STRICT_DNS

{{- if $spec.deployment.stats }}
      - name: admin_port_cluster
        connect_timeout: 5.000s
        type: STATIC
        lb_policy: ROUND_ROBIN
        load_assignment:
          cluster_name: admin_port_cluster
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: 127.0.0.1
                    port_value: 19000
{{- end}}

    dynamic_resources:
      ads_config:
        api_type: GRPC
        grpc_services:
        - envoy_grpc: {cluster_name: gloo.{{ $.Release.Namespace }}.svc.cluster.local:{{ $.Values.gloo.deployment.xdsPort }}}
      cds_config:
        ads: {}
      lds_config:
        ads: {}
    admin:
      access_log_path: /dev/null
      address:
        socket_address:
          address: 127.0.0.1
          port_value: 19000
{{- else}}{{ toYaml $spec.configMap.data | indent 2}}{{- end}}
{{- end }}
{{- end }}