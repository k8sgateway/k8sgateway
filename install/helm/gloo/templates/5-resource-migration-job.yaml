{{- $image := .Values.gateway.rolloutJob.image }}
{{- if .Values.global }}
{{- $image = merge .Values.gateway.rolloutJob.image .Values.global.image }}
{{- end }}
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app: gloo
    gloo: resource-migration
  name: gloo-resource-migration
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-weight": "3" # run this job after the role/rolebinding is created, and before the validation webhook is upgraded
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
spec:
  template:
    metadata:
      labels:
        gloo: resource-migration
    spec:
      {{- include "gloo.pullSecret" $image | nindent 6 -}}
      serviceAccountName: gloo-resource-migration
      containers:
        - name: kubectl
          image: {{template "gloo.image" $image}}
          imagePullPolicy: {{ $image.pullPolicy }}
          securityContext:
            runAsNonRoot: true
            {{- if not .Values.gateway.rolloutJob.floatingUserId }}
            runAsUser: {{ printf "%.0f" (float64 .Values.gateway.rolloutJob.runAsUser) -}}
            {{- end }}
          command:
          - /bin/sh
          - -c
          - |
            # remove existing helm labels/annotations since the custom resources are no longer managed by helm.
            # also add resource-policy to tell helm not to delete the resource during upgrade.
            # select by label app=gloo, which is on all CRs from the gloo helm chart.
            kubectl annotate --overwrite upstreams.gloo.solo.io -n {{ $.Release.Namespace }} -l app=gloo helm.sh/hook- helm.sh/hook-weight- meta.helm.sh/release-name- meta.helm.sh/release-namespace- helm.sh/resource-policy=keep || exit $?
            kubectl label upstreams.gloo.solo.io -n {{ $.Release.Namespace }} -l app=gloo,app.kubernetes.io/managed-by=Helm app.kubernetes.io/managed-by- || exit $?

            # gateways can be in multiple namespaces
            {{- range include "gloo.gatewayNamespaces" $ | fromJsonArray }}
            kubectl annotate --overwrite gateways.gateway.solo.io -n {{ . }} -l app=gloo helm.sh/hook- helm.sh/hook-weight- meta.helm.sh/release-name- meta.helm.sh/release-namespace- helm.sh/resource-policy=keep || exit $?
            kubectl label gateways.gateway.solo.io -n {{ . }} -l app=gloo,app.kubernetes.io/managed-by=Helm app.kubernetes.io/managed-by- || exit $?
            {{- end }}
      restartPolicy: OnFailure
  ttlSecondsAfterFinished: 0
{{- if .Values.global.glooRbac.create }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: gloo
    gloo: rbac
  annotations:
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-weight": "0" # must be created before job
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
  name: gloo-resource-migration
  namespace: {{ .Release.Namespace }}
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: gloo-resource-migration
  namespace: {{ .Release.Namespace }}
  labels:
    app: gloo
    gloo: rbac
  annotations:
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-weight": "0" # must be created before job
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
rules:
- apiGroups: ["gloo.solo.io"]
  resources: ["*"]
  verbs: ["get", "list", "update", "patch"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: gloo-resource-migration
  namespace: {{ .Release.Namespace }}
  labels:
    app: gloo
    gloo: rbac
  annotations:
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-weight": "0" # must be created before job
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
roleRef:
  kind: Role
  name: gloo-resource-migration
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: gloo-resource-migration
  namespace: {{ .Release.Namespace }}
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: gloo-resource-migration{{ include "gloo.rbacNameSuffix" . }}
  labels:
    app: gloo
    gloo: rbac
  annotations:
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-weight": "0" # must be created before job
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
rules:
- apiGroups: ["gateway.solo.io"]
  resources: ["*"]
  verbs: ["get", "list", "update", "patch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: gloo-resource-migration{{ include "gloo.rbacNameSuffix" . }}
  labels:
    app: gloo
    gloo: rbac
  annotations:
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-weight": "0" # must be created before job
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
roleRef:
  kind: ClusterRole
  name: gloo-resource-migration{{ include "gloo.rbacNameSuffix" . }}
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: gloo-resource-migration
  namespace: {{ .Release.Namespace }}
{{- end }}{{/* if .Values.global.glooRbac.create */}}
