syntax = "proto3";
package gloo.api.common.v1;

option go_package = "github.com/solo-io/gloo/pkg/plugins/common/transformation";

import "gogoproto/gogo.proto";
option (gogoproto.equal_all) = true;
import "google/protobuf/wrappers.proto";

/*
    This file is copied from plugins/rest/spec.proto, with the package and go_package changed
*/

// The REST Route Extension contains two components:
// * parameters for calling REST functions
// * Response Transformation
message RouteExtension {
    // If specified, these parameters will be used as inputs for REST templates for
    // the destination function for the route
    // (if the route destination is a functional destination that has a REST transformation)
    Parameters parameters = 1;
    // If specified, responses on this route will be transformed according to the template(s) provided
    // in the transformation spec here
    TransformationSpec response_transformation = 2;
    // If specified, paremeters for the response transformation will be extracted from these sources
    Parameters response_params = 3;
}

// Parameters define a set of parameters for REST Transformations
// Parameters can be extracted from HTTP Headers and Request Path
// Parameters can also be extracted from the HTTP Body, provided that it is
// valid JSON-encoded
// Gloo will search for parameters by their name in strings, enclosed in single
// curly braces, and attempt to match them to the variables in REST Function Templates
// for example:
//   # route
//   match: {...}
//   destination: {...}
//   extensions:
//     parameters:
//         headers:
//           x-user-id: { userId }
//   ---
//   # function
//   name: myfunc
//   spec:
//     body: |
//     {
//       "id": {{ userId }}
//     }
message Parameters {
    // headers that will be used to extract data for processing output templates
    // Gloo will search for parameters by their name in header value strings, enclosed in single
    // curly braces
    // Example:
    //   extensions:
    //     parameters:
    //         headers:
    //           x-user-id: { userId }
    map<string, string> headers = 1;
    // part of the (or the entire) path that will be used extract data for processing output templates
    // Gloo will search for parameters by their name in header value strings, enclosed in single
    // curly braces
    // Example:
    //   extensions:
    //     parameters:
    //         path: /users/{ userId }
    google.protobuf.StringValue path = 2;
    //TODO: support query params
    //TODO: support form params
}

// TransformationSpec can act as part of a Route Extension (as a Response Transformation), or as
// a FunctionSpec (as a Request Transformation).
// Use TransformationSpec as the Function Spec for REST Services (where `Upstream.ServiceInfo.Type == "REST"`)
// TransformationSpec contains a set of templates that will be used to modify the Path, Headers, and Body
// Parameters for the tempalte come from the following sources:
// path: HTTP Request path (if present)
// method: HTTP Request method (if present)
// parameters specified in the RouteExtension.Parameters (or, in the case of ResponseTransformation, RouteExtension.ResponseParams)
// Parameters can also be extracted from the Request / Response Body provided that they are JSON
// To do so, specify the field using JSONPath syntax
// any field from the request body, assuming it's json (http://goessner.net/articles/JsonPath/index.html#e2)
message TransformationSpec {
    // a Jinja-style Template string for the outbound request path. Only useful for request transformation
    string path = 1;
    // a map of keys to Jinja-style Template strings HTTP Headers. Useful for request and response transformations
    map<string, string> headers = 2;
    // a Jinja-style Template string for the outbound HTTP Body. Useful for request and response transformations
    // If this is nil, the body will be passed through unmodified. If set to an empty string, the body will be removed
    // from the HTTP message.
    google.protobuf.StringValue body = 3;
    //TODO: support query template
    //TODO: support form template
}
