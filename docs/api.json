{
  "files": [
    {
      "name": "github.com/solo-io/gloo/pkg/coreplugins/static/upstream_spec.proto",
      "description": "",
      "package": "gloo.api.core.v1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "UpstreamSpec",
          "longName": "UpstreamSpec",
          "fullName": "gloo.api.core.v1.UpstreamSpec",
          "description": "Configuration for Static Upstreams",
          "hasExtensions": false,
          "hasFields": true,
          "extensions": [],
          "fields": [
            {
              "name": "hosts",
              "description": "A list of addresses and ports\nat least one must be specified",
              "label": "repeated",
              "type": "Host",
              "longType": "Host",
              "fullType": "gloo.api.core.v1.Host",
              "defaultValue": ""
            },
            {
              "name": "enable_ipv6",
              "description": "Enable ipv6 addresses to be used for routing",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "defaultValue": ""
            },
            {
              "name": "tls",
              "description": "Attempt to use outbound TLS",
              "label": "",
              "type": "BoolValue",
              "longType": "google.protobuf.BoolValue",
              "fullType": "google.protobuf.BoolValue",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Host",
          "longName": "Host",
          "fullName": "gloo.api.core.v1.Host",
          "description": "Represents a single instance of an upstream",
          "hasExtensions": false,
          "hasFields": true,
          "extensions": [],
          "fields": [
            {
              "name": "addr",
              "description": "Address (hostname or IP)",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "defaultValue": ""
            },
            {
              "name": "port",
              "description": "Port the instance is listening on",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "github.com/solo-io/gloo/pkg/coreplugins/routing/route_extensions.proto",
      "description": "",
      "package": "gloo.api.core.v1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "RouteExtensions",
          "longName": "RouteExtensions",
          "fullName": "gloo.api.core.v1.RouteExtensions",
          "description": "RouteExtensions should be placed in the route.extensions field\nRouteExtensions extend the behavior of a regular route in gloo (within a virtual service)",
          "hasExtensions": false,
          "hasFields": true,
          "extensions": [],
          "fields": [
            {
              "name": "add_request_headers",
              "description": "These headers will be added to the request before it is sent to the upstream",
              "label": "repeated",
              "type": "HeaderValue",
              "longType": "HeaderValue",
              "fullType": "gloo.api.core.v1.HeaderValue",
              "defaultValue": ""
            },
            {
              "name": "add_response_headers",
              "description": "These headers will be added to the response before it is returned to the downstream",
              "label": "repeated",
              "type": "HeaderValue",
              "longType": "HeaderValue",
              "fullType": "gloo.api.core.v1.HeaderValue",
              "defaultValue": ""
            },
            {
              "name": "remove_response_headers",
              "description": "These headers will be removed from the request before it is sent to the upstream",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "defaultValue": ""
            },
            {
              "name": "max_retries",
              "description": "The maximum number of retries to attempt for requests that get a 5xx response",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "defaultValue": ""
            },
            {
              "name": "timeout",
              "description": "If set, time out requests on this route. If not set, this will default to the connection timeout on the upstream",
              "label": "",
              "type": "Duration",
              "longType": "google.protobuf.Duration",
              "fullType": "google.protobuf.Duration",
              "defaultValue": ""
            },
            {
              "name": "host_rewrite",
              "description": "Rewrite the host header of the request to this value, if set",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "defaultValue": ""
            },
            {
              "name": "cors",
              "description": "Configure Cross-Origin Resource Sharing requests",
              "label": "",
              "type": "CorsPolicy",
              "longType": "CorsPolicy",
              "fullType": "gloo.api.core.v1.CorsPolicy",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "HeaderValue",
          "longName": "HeaderValue",
          "fullName": "gloo.api.core.v1.HeaderValue",
          "description": "Header name/value pair",
          "hasExtensions": false,
          "hasFields": true,
          "extensions": [],
          "fields": [
            {
              "name": "key",
              "description": "Header name",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "defaultValue": ""
            },
            {
              "name": "value",
              "description": "Header value",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "defaultValue": ""
            },
            {
              "name": "append",
              "description": "Should this value be appended?",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CorsPolicy",
          "longName": "CorsPolicy",
          "fullName": "gloo.api.core.v1.CorsPolicy",
          "description": "Configuration for Cross-Origin Resource Sharing requests",
          "hasExtensions": false,
          "hasFields": true,
          "extensions": [],
          "fields": [
            {
              "name": "allow_origin",
              "description": "Specifies the origins that will be allowed to do CORS requests.\n\nAn origin is allowed if either allow_origin matches.",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "defaultValue": ""
            },
            {
              "name": "allow_methods",
              "description": "Specifies the content for the *access-control-allow-methods* header.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "defaultValue": ""
            },
            {
              "name": "allow_headers",
              "description": "Specifies the content for the *access-control-allow-headers* header.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "defaultValue": ""
            },
            {
              "name": "expose_headers",
              "description": "Specifies the content for the *access-control-expose-headers* header.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "defaultValue": ""
            },
            {
              "name": "max_age",
              "description": "Specifies the content for the *access-control-max-age* header.",
              "label": "",
              "type": "Duration",
              "longType": "google.protobuf.Duration",
              "fullType": "google.protobuf.Duration",
              "defaultValue": ""
            },
            {
              "name": "allow_credentials",
              "description": "Specifies whether the resource allows credentials.",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "github.com/solo-io/gloo/pkg/plugins/connect/listener_config.proto",
      "description": "",
      "package": "gloo.api.connect.v1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "ListenerConfig",
          "longName": "ListenerConfig",
          "fullName": "gloo.api.connect.v1.ListenerConfig",
          "description": "the listenerConfig must be either an InboundListener or an OutboundListener",
          "hasExtensions": false,
          "hasFields": true,
          "extensions": [],
          "fields": [
            {
              "name": "inbound",
              "description": "",
              "label": "",
              "type": "InboundListenerConfig",
              "longType": "InboundListenerConfig",
              "fullType": "gloo.api.connect.v1.InboundListenerConfig",
              "defaultValue": ""
            },
            {
              "name": "outbound",
              "description": "",
              "label": "",
              "type": "OutboundListenerConfig",
              "longType": "OutboundListenerConfig",
              "fullType": "gloo.api.connect.v1.OutboundListenerConfig",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "InboundListenerConfig",
          "longName": "InboundListenerConfig",
          "fullName": "gloo.api.connect.v1.InboundListenerConfig",
          "description": "configuration for the inbound listener\nthis listener does authentication and connects\nclients to the local service",
          "hasExtensions": false,
          "hasFields": true,
          "extensions": [],
          "fields": [
            {
              "name": "auth_config",
              "description": "configuration for tls-based auth filter",
              "label": "",
              "type": "AuthConfig",
              "longType": "AuthConfig",
              "fullType": "gloo.api.connect.v1.AuthConfig",
              "defaultValue": ""
            },
            {
              "name": "local_service_address",
              "description": "the address of the local upstream being proxied\nthe service being proxied must be reachable by Envoy",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "defaultValue": ""
            },
            {
              "name": "local_service_name",
              "description": "the name of the local consul service being proxied",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "AuthConfig",
          "longName": "AuthConfig",
          "fullName": "gloo.api.connect.v1.AuthConfig",
          "description": "AuthConfig contains information necessary to\ncommunicate with the Authentication Server (Consul Agent)",
          "hasExtensions": false,
          "hasFields": true,
          "extensions": [],
          "fields": [
            {
              "name": "target",
              "description": "The name of the service who owns this proxy\nTarget must be delivered by the filter as part of the authorize request payload",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "defaultValue": ""
            },
            {
              "name": "authorize_hostname",
              "description": "the hostname of the authorization REST service",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "defaultValue": ""
            },
            {
              "name": "authorize_port",
              "description": "the port of the authorization REST service",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "defaultValue": ""
            },
            {
              "name": "authorize_path",
              "description": "the request path for the authorization REST service\nNOTE: currently ignored by the plugin and filter",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "defaultValue": ""
            },
            {
              "name": "request_timeout",
              "description": "Connection Timeout tells the filter to set a timeout for unresponsive connections created to this upstream.\nIf not provided by the user, it will set to a default value",
              "label": "",
              "type": "Duration",
              "longType": "google.protobuf.Duration",
              "fullType": "google.protobuf.Duration",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "OutboundListenerConfig",
          "longName": "OutboundListenerConfig",
          "fullName": "gloo.api.connect.v1.OutboundListenerConfig",
          "description": "The configuration for the outbound listeners which serve as \"tcp routes\"",
          "hasExtensions": false,
          "hasFields": true,
          "extensions": [],
          "fields": [
            {
              "name": "destination_consul_service",
              "description": "The name of the consul service which is the destination for the listener",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "defaultValue": ""
            },
            {
              "name": "destination_consul_type",
              "description": "TODO (ilackarms): support destination type in Consul Connect API",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "github.com/solo-io/gloo/pkg/plugins/azure/function_spec.proto",
      "description": "",
      "package": "gloo.api.azure.v1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "FunctionSpec",
          "longName": "FunctionSpec",
          "fullName": "gloo.api.azure.v1.FunctionSpec",
          "description": "Function Spec for Functions on Azure Functions Upstreams",
          "hasExtensions": false,
          "hasFields": true,
          "extensions": [],
          "fields": [
            {
              "name": "function_name",
              "description": "The Name of the Azure Function as it appears in the Azure Functions Portal",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "defaultValue": ""
            },
            {
              "name": "auth_level",
              "description": "Auth Level can bve either \"anonymous\" \"function\" or \"admin\"\nSee https://vincentlauzon.com/2017/12/04/azure-functions-http-authorization-levels/ for more details",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "github.com/solo-io/gloo/pkg/plugins/azure/upstream_spec.proto",
      "description": "",
      "package": "gloo.api.azure.v1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "UpstreamSpec",
          "longName": "UpstreamSpec",
          "fullName": "gloo.api.azure.v1.UpstreamSpec",
          "description": "Upstream Spec for Azure Functions Upstreams",
          "hasExtensions": false,
          "hasFields": true,
          "extensions": [],
          "fields": [
            {
              "name": "function_app_name",
              "description": "The Name of the Azure Function App where the functions are grouped",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "defaultValue": ""
            },
            {
              "name": "secret_ref",
              "description": "A [Gloo Secret Ref](https://gloo.solo.io/introduction/concepts/#Secrets) to an [Azure Publish Profile JSON file](https://azure.microsoft.com/en-us/downloads/publishing-profile-overview/).\n{{ hide_not_implemented \"Azure Secrets can be created with `glooctl secret create azure ...`\" }}\nNote that this secret is not required unless Function Discovery is enabled",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "github.com/solo-io/gloo/pkg/plugins/aws/function_spec.proto",
      "description": "",
      "package": "gloo.api.aws.v1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "FunctionSpec",
          "longName": "FunctionSpec",
          "fullName": "gloo.api.aws.v1.FunctionSpec",
          "description": "Function Spec for Functions on AWS Lambda Upstreams",
          "hasExtensions": false,
          "hasFields": true,
          "extensions": [],
          "fields": [
            {
              "name": "function_name",
              "description": "The Name of the Lambda Function as it appears in the AWS Lambda Portal",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "defaultValue": ""
            },
            {
              "name": "qualifier",
              "description": "The Qualifier for the Lambda Function. Qualifiers act as a kind of version\nfor Lambda Functions. See https://docs.aws.amazon.com/lambda/latest/dg/API_Invoke.html for more info.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "github.com/solo-io/gloo/pkg/plugins/aws/upstream_spec.proto",
      "description": "",
      "package": "gloo.api.aws.v1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "UpstreamSpec",
          "longName": "UpstreamSpec",
          "fullName": "gloo.api.aws.v1.UpstreamSpec",
          "description": "Upstream Spec for AWS Lambda Upstreams",
          "hasExtensions": false,
          "hasFields": true,
          "extensions": [],
          "fields": [
            {
              "name": "region",
              "description": "The AWS Region in which to run Lambda Functions",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "defaultValue": ""
            },
            {
              "name": "secret_ref",
              "description": "A [Gloo Secret Ref](https://gloo.solo.io/introduction/concepts/#Secrets) to an AWS Secret\nAWS Secrets can be created with `glooctl secret create aws ...`\nIf the secret is created manually, it must conform to the following structure:\n ```\n access_key: \u003caws access key\u003e\n secret_key: \u003caws secret key\u003e\n ```",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "github.com/solo-io/gloo/pkg/plugins/nats-streaming/nats_streaming_filter.proto",
      "description": "",
      "package": "nats",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "NatsStreaming",
          "longName": "NatsStreaming",
          "fullName": "nats.NatsStreaming",
          "description": "[#proto-status: experimental]",
          "hasExtensions": false,
          "hasFields": true,
          "extensions": [],
          "fields": [
            {
              "name": "cluster",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "defaultValue": ""
            },
            {
              "name": "max_connections",
              "description": "",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "defaultValue": ""
            },
            {
              "name": "op_timeout",
              "description": "",
              "label": "",
              "type": "Duration",
              "longType": "google.protobuf.Duration",
              "fullType": "google.protobuf.Duration",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "attribute.proto",
      "description": "",
      "package": "gloo.api.v1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "Attribute",
          "longName": "Attribute",
          "fullName": "gloo.api.v1.Attribute",
          "description": "An attribute is a container for configuration that is intended to be applied across a set of labeled resources inside of Gloo.\nAttributes specify a set of selectors which are compared with labels by Gloo at runtime\nIn the current implementation, only Listeners have be selected, and therefore configured by Attributes.\nLabels and Selectors follow the same logical patterns implemented by Kubernetes.\nRead about the Kubernetes concepts here: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/\nAttributes are useful when applying shared configuration to a large number of objects, such as the sharing of route\nconfiguration between roles.",
          "hasExtensions": false,
          "hasFields": true,
          "extensions": [],
          "fields": [
            {
              "name": "name",
              "description": "Name of the attribute.\n\nAttribute Names must be unique and follow the following syntax rules:\nOne or more lowercase rfc1035/rfc1123 labels separated by '.' with a maximum length of 253 characters.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "defaultValue": ""
            },
            {
              "name": "listener_attribute",
              "description": "",
              "label": "",
              "type": "ListenerAttribute",
              "longType": "ListenerAttribute",
              "fullType": "gloo.api.v1.ListenerAttribute",
              "defaultValue": ""
            },
            {
              "name": "status",
              "description": "Status indicates the validation status of the attribute resource.\nStatus is read-only by clients, and set by gloo during validation",
              "label": "",
              "type": "Status",
              "longType": "Status",
              "fullType": "gloo.api.v1.Status",
              "defaultValue": ""
            },
            {
              "name": "metadata",
              "description": "Metadata contains the resource metadata for the attribute",
              "label": "",
              "type": "Metadata",
              "longType": "Metadata",
              "fullType": "gloo.api.v1.Metadata",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListenerAttribute",
          "longName": "ListenerAttribute",
          "fullName": "gloo.api.v1.ListenerAttribute",
          "description": "Listeners define the address:port where the proxy will listen for incoming connections\nEach listener defines a unique set of TCP and HTTP behaviors",
          "hasExtensions": false,
          "hasFields": true,
          "extensions": [],
          "fields": [
            {
              "name": "selector",
              "description": "Apply this attribute to listeners with label keys and values matching this\nselector. If empty or not present, the attribute will not be applied to any listeners.",
              "label": "repeated",
              "type": "SelectorEntry",
              "longType": "ListenerAttribute.SelectorEntry",
              "fullType": "gloo.api.v1.ListenerAttribute.SelectorEntry",
              "defaultValue": ""
            },
            {
              "name": "virtual_services",
              "description": "Listeners can serve HTTP or raw TCP, but not both. If at least one Virtual Service is specified here,\nthe listener will become an HTTP listener serving routes defined in these virtual services.\nSome Listener plugins may impose restrictions on the Virtual Services that can be applied to a listener.\nFor example, some plugins may require all applied virtual services only route to a specific upstream,\na common requirement for Service Meshes",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "defaultValue": ""
            },
            {
              "name": "config",
              "description": "Config contains top-level config to be applied to a listener\nListener config is applied to all TCP/HTTP traffic that\ninitiates via this listener.\nConfiguration such as gzip compression and TLS authentication is specified here\nThis config struct will be merged with Role-specific Listener Conig. If two fields overlap between the\nListener config on the role and the config on the attribute, the config on the Role will supersede this one",
              "label": "",
              "type": "Struct",
              "longType": "google.protobuf.Struct",
              "fullType": "google.protobuf.Struct",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SelectorEntry",
          "longName": "ListenerAttribute.SelectorEntry",
          "fullName": "gloo.api.v1.ListenerAttribute.SelectorEntry",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "extensions": [],
          "fields": [
            {
              "name": "key",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "defaultValue": ""
            },
            {
              "name": "value",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "config.proto",
      "description": "",
      "package": "gloo.api.v1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "Config",
          "longName": "Config",
          "fullName": "gloo.api.v1.Config",
          "description": "Config is a top-level config object. It is used internally by gloo as a container for the entire set of config objects.",
          "hasExtensions": false,
          "hasFields": true,
          "extensions": [],
          "fields": [
            {
              "name": "upstreams",
              "description": "The list of all upstreams defined by the user.",
              "label": "repeated",
              "type": "Upstream",
              "longType": "Upstream",
              "fullType": "gloo.api.v1.Upstream",
              "defaultValue": ""
            },
            {
              "name": "virtual_services",
              "description": "the list of all virtual services defined by the user.",
              "label": "repeated",
              "type": "VirtualService",
              "longType": "VirtualService",
              "fullType": "gloo.api.v1.VirtualService",
              "defaultValue": ""
            },
            {
              "name": "roles",
              "description": "the list roles defined by the user",
              "label": "repeated",
              "type": "Role",
              "longType": "Role",
              "fullType": "gloo.api.v1.Role",
              "defaultValue": ""
            },
            {
              "name": "attributes",
              "description": "the list attributes defined by the user",
              "label": "repeated",
              "type": "Attribute",
              "longType": "Attribute",
              "fullType": "gloo.api.v1.Attribute",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "metadata.proto",
      "description": "",
      "package": "gloo.api.v1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "Metadata",
          "longName": "Metadata",
          "fullName": "gloo.api.v1.Metadata",
          "description": "Metadata contains general properties of config resources useful to clients and the gloo control plane for purposes of versioning, annotating, and namespacing resources.",
          "hasExtensions": false,
          "hasFields": true,
          "extensions": [],
          "fields": [
            {
              "name": "resource_version",
              "description": "ResourceVersion keeps track of the resource version of a config resource. This mechanism is used by [gloo-storage](https://github.com/solo-io/gloo/pkg/storage) to ensure safety with concurrent writes/updates to a resource in storage.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "defaultValue": ""
            },
            {
              "name": "namespace",
              "description": "Namespace is used for the namespacing of resources. Currently unused by gloo internally.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "defaultValue": ""
            },
            {
              "name": "annotations",
              "description": "Annotations allow clients to tag resources for special use cases. gloo ignores annotations but preserved them on read/write from/to storage.",
              "label": "repeated",
              "type": "AnnotationsEntry",
              "longType": "Metadata.AnnotationsEntry",
              "fullType": "gloo.api.v1.Metadata.AnnotationsEntry",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "AnnotationsEntry",
          "longName": "Metadata.AnnotationsEntry",
          "fullName": "gloo.api.v1.Metadata.AnnotationsEntry",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "extensions": [],
          "fields": [
            {
              "name": "key",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "defaultValue": ""
            },
            {
              "name": "value",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "role.proto",
      "description": "",
      "package": "gloo.api.v1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "Role",
          "longName": "Role",
          "fullName": "gloo.api.v1.Role",
          "description": "A Role is a container for a set of Virtual Services that will be used to generate a single proxy config\nto be applied to one or more Envoy nodes. The Role is best understood as an in-mesh application's localized view\nof the rest of the mesh.\nEach domain for each Virtual Service contained in a Role cannot appear more than once, or the Role\nwill be invalid.\nRoles contain a config field which can be written to for the purpose of applying configuration and policy\nto groupings of Virtual Services.",
          "hasExtensions": false,
          "hasFields": true,
          "extensions": [],
          "fields": [
            {
              "name": "name",
              "description": "Name of the role. Envoy nodes will be assigned a config matching the role they report to Gloo when registering\nEnvoy instances must specify their role in the prefix for their Node ID when they register to Gloo.\n\nCurrently this is done in the format \u003cRole\u003e~\u003cthis portion is ignored\u003e\nwhich can be specified with the `--service-node` flag, or in the Envoy instance's bootstrap config.\n\nRole Names must be unique and follow the following syntax rules:\nOne or more lowercase rfc1035/rfc1123 labels separated by '.' with a maximum length of 253 characters.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "defaultValue": ""
            },
            {
              "name": "listeners",
              "description": "define each listener the proxy will create\nlisteners define a set of behaviors for a single address:port\nwhere the proxy will listen\nif no listeners are specified, the role will behave as a gateway\nsee (pkg/api/defaults/v1)[https://github.com/solo-io/gloo/tree/master/pkg/api/defaults/v1]\nto see the default listeners that will be created for Gateway proxies\nbinding to the default HTTP (8080) and HTTPS (8443) ports on 0.0.0.0 (all interfaces)",
              "label": "repeated",
              "type": "Listener",
              "longType": "Listener",
              "fullType": "gloo.api.v1.Listener",
              "defaultValue": ""
            },
            {
              "name": "status",
              "description": "Status indicates the validation status of the role resource.\nStatus is read-only by clients, and set by gloo during validation",
              "label": "",
              "type": "Status",
              "longType": "Status",
              "fullType": "gloo.api.v1.Status",
              "defaultValue": ""
            },
            {
              "name": "metadata",
              "description": "Metadata contains the resource metadata for the role",
              "label": "",
              "type": "Metadata",
              "longType": "Metadata",
              "fullType": "gloo.api.v1.Metadata",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Listener",
          "longName": "Listener",
          "fullName": "gloo.api.v1.Listener",
          "description": "Listeners define the address:port where the proxy will listen for incoming connections\nEach listener defines a unique set of TCP and HTTP behaviors",
          "hasExtensions": false,
          "hasFields": true,
          "extensions": [],
          "fields": [
            {
              "name": "name",
              "description": "the name of the listener. names must be unique for listeners within a role",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "defaultValue": ""
            },
            {
              "name": "bind_address",
              "description": "the bind address for the listener.\nboth ipv4 and ipv6 formats are supported",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "defaultValue": ""
            },
            {
              "name": "bind_port",
              "description": "the port to bind on\nports numbers must be unique for listeners within a role",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "defaultValue": ""
            },
            {
              "name": "virtual_services",
              "description": "defines the set of virtual services that will be accessible by clients connecting to this listener.\nat least one virtual service must be specifiedfor HTTP-level features to be applied at the listener level",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "defaultValue": ""
            },
            {
              "name": "config",
              "description": "Config contains top-level config to be applied to a listener\nListener config is applied to all TCP/HTTP traffic that\ninitiates via this listener.\nConfiguration such as gzip compression and TLS authentication is specified here",
              "label": "",
              "type": "Struct",
              "longType": "google.protobuf.Struct",
              "fullType": "google.protobuf.Struct",
              "defaultValue": ""
            },
            {
              "name": "labels",
              "description": "Apply Listener Attributes to listeners with selectors matching these label keys and values\nIf empty or not present, the Listener will inherit no configuration from Attributes.",
              "label": "repeated",
              "type": "LabelsEntry",
              "longType": "Listener.LabelsEntry",
              "fullType": "gloo.api.v1.Listener.LabelsEntry",
              "defaultValue": ""
            },
            {
              "name": "ssl_config",
              "description": "SSL Config is optional for the role. If provided, the listener will serve TLS for connections on this port\nthis is useful when there are no virtual services assigned to this listener, e.g. for the purpose of\nsecuring a Listener functioning as a TCP Proxy\nif no virtual services are defined and ssl_config is nil, the proxy will serve tcp connections insecurely on this port",
              "label": "",
              "type": "SSLConfig",
              "longType": "SSLConfig",
              "fullType": "gloo.api.v1.SSLConfig",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LabelsEntry",
          "longName": "Listener.LabelsEntry",
          "fullName": "gloo.api.v1.Listener.LabelsEntry",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "extensions": [],
          "fields": [
            {
              "name": "key",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "defaultValue": ""
            },
            {
              "name": "value",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "status.proto",
      "description": "",
      "package": "gloo.api.v1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [
        {
          "name": "State",
          "longName": "Status.State",
          "fullName": "gloo.api.v1.Status.State",
          "description": "",
          "values": [
            {
              "name": "Pending",
              "number": "0",
              "description": "Pending status indicates the resource has not yet been validated"
            },
            {
              "name": "Accepted",
              "number": "1",
              "description": "Accepted indicates the resource has been validated"
            },
            {
              "name": "Rejected",
              "number": "2",
              "description": "Rejected indicates an invalid configuration by the user\nRejected resources may be propagated to the xDS server depending on their severity"
            }
          ]
        }
      ],
      "extensions": [],
      "messages": [
        {
          "name": "Status",
          "longName": "Status",
          "fullName": "gloo.api.v1.Status",
          "description": "Status indicates whether a config resource (currently only [virtualservices](../introduction/concepts.md) and [upstreams](../introduction/concepts.md)) has been (in)validated by gloo",
          "hasExtensions": false,
          "hasFields": true,
          "extensions": [],
          "fields": [
            {
              "name": "state",
              "description": "State is the enum indicating the state of the resource",
              "label": "",
              "type": "State",
              "longType": "Status.State",
              "fullType": "gloo.api.v1.Status.State",
              "defaultValue": ""
            },
            {
              "name": "reason",
              "description": "Reason is a description of the error for Rejected resources. If the resource is pending or accepted, this field will be empty",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "upstream.proto",
      "description": "",
      "package": "gloo.api.v1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "Upstream",
          "longName": "Upstream",
          "fullName": "gloo.api.v1.Upstream",
          "description": "Upstream represents a destination for routing. Upstreams can be compared to\n[clusters](https://www.envoyproxy.io/docs/envoy/latest/api-v1/cluster_manager/cluster.html?highlight=cluster) in Envoy terminology.\nUpstreams can take a variety of types\u003c!--(TODO)--\u003e in gloo. Language extensions known as plugins\u003c!--(TODO)--\u003e allow the addition of new\ntypes of upstreams. \u003c!--See [upstream types](TODO) for a detailed description of available upstream types.--\u003e",
          "hasExtensions": false,
          "hasFields": true,
          "extensions": [],
          "fields": [
            {
              "name": "name",
              "description": "Name of the upstream. Names must be unique and follow the following syntax rules:\nOne or more lowercase rfc1035/rfc1123 labels separated by '.' with a maximum length of 253 characters.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "defaultValue": ""
            },
            {
              "name": "type",
              "description": "Type indicates the type of the upstream. Examples include static\u003c!--(TODO)--\u003e, kubernetes\u003c!--(TODO)--\u003e, and [aws](../plugins/aws.md)\nTypes are defined by the plugin\u003c!--(TODO)--\u003e associated with them.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "defaultValue": ""
            },
            {
              "name": "connection_timeout",
              "description": "Connection Timeout tells gloo to set a timeout for unresponsive connections created to this upstream.\nIf not provided by the user, it will set to a default value",
              "label": "",
              "type": "Duration",
              "longType": "google.protobuf.Duration",
              "fullType": "google.protobuf.Duration",
              "defaultValue": ""
            },
            {
              "name": "spec",
              "description": "Spec contains properties that are specific to the upstream type. The spec is always required, but\nthe expected content is specified by the [upstream plugin] for the given upstream type.\nMost often the upstream spec will be a map\u003cstring, string\u003e",
              "label": "",
              "type": "Struct",
              "longType": "google.protobuf.Struct",
              "fullType": "google.protobuf.Struct",
              "defaultValue": ""
            },
            {
              "name": "functions",
              "description": "Certain upstream types support (and may require) [functions](../introduction/concepts.md#Functions).\nFunctions allow function-level routing to be done. For example, the [AWS lambda](../plugins/aws.md) upstream type\nPermits routing to AWS lambda function].\n[routes](virtualservice.md#Route) on virtualservices can specify function destinations to route to specific functions.",
              "label": "repeated",
              "type": "Function",
              "longType": "Function",
              "fullType": "gloo.api.v1.Function",
              "defaultValue": ""
            },
            {
              "name": "service_info",
              "description": "Service Info contains information about the service running on the upstream\nService Info is optional, but is used by certain plugins (such as the gRPC plugin)\nas well as discovery services to provide sophistocated routing features for well-known\ntypes of services",
              "label": "",
              "type": "ServiceInfo",
              "longType": "ServiceInfo",
              "fullType": "gloo.api.v1.ServiceInfo",
              "defaultValue": ""
            },
            {
              "name": "status",
              "description": "Status indicates the validation status of the upstream resource. Status is read-only by clients, and set by gloo during validation",
              "label": "",
              "type": "Status",
              "longType": "Status",
              "fullType": "gloo.api.v1.Status",
              "defaultValue": ""
            },
            {
              "name": "metadata",
              "description": "Metadata contains the resource metadata for the upstream",
              "label": "",
              "type": "Metadata",
              "longType": "Metadata",
              "fullType": "gloo.api.v1.Metadata",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ServiceInfo",
          "longName": "ServiceInfo",
          "fullName": "gloo.api.v1.ServiceInfo",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "extensions": [],
          "fields": [
            {
              "name": "type",
              "description": "Type indicates the type of service running on the upstream.\nCurrent options include `REST`, `gRPC`, and `NATS`",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "defaultValue": ""
            },
            {
              "name": "properties",
              "description": "Properties contains properties that describe the service. The spec may be required\nby the Upstream Plugin that handles the given Service Type\nMost often the service properties will be a map\u003cstring, string\u003e",
              "label": "",
              "type": "Struct",
              "longType": "google.protobuf.Struct",
              "fullType": "google.protobuf.Struct",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Function",
          "longName": "Function",
          "fullName": "gloo.api.v1.Function",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "extensions": [],
          "fields": [
            {
              "name": "name",
              "description": "Name of the function. Functions are referenced by name from routes and therefore must be unique within an upstream",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "defaultValue": ""
            },
            {
              "name": "spec",
              "description": "Spec for the function. Like [upstream specs](TODO), the content of function specs is specified by the [upstream plugin](TODO) for the upstream's type.",
              "label": "",
              "type": "Struct",
              "longType": "google.protobuf.Struct",
              "fullType": "google.protobuf.Struct",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "virtualservice.proto",
      "description": "",
      "package": "gloo.api.v1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "VirtualService",
          "longName": "VirtualService",
          "fullName": "gloo.api.v1.VirtualService",
          "description": "Virtual Services represent a collection of routes for a set of domains.\nGloo's Virtual Services can be compared to\n[virtual hosts](https://www.envoyproxy.io/docs/envoy/latest/api-v1/route_config/vService.html?highlight=virtual%20host) in Envoy terminology.\nA virtual service can be used to define \"apps\"; a collection of APIs that belong to a particular domain.\nThe Virtual Service concept allows configuration of per-virtualservice SSL certificates",
          "hasExtensions": false,
          "hasFields": true,
          "extensions": [],
          "fields": [
            {
              "name": "name",
              "description": "Name of the virtual service. Names must be unique and follow the following syntax rules:\nOne or more lowercase rfc1035/rfc1123 labels separated by '.' with a maximum length of 253 characters.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "defaultValue": ""
            },
            {
              "name": "domains",
              "description": "Domains represent the list of domains (host/authority header) that will match for all routes on this virtual service.\nAs in Envoy: wildcard hosts are supported in the form of “*.foo.com” or “*-bar.foo.com”.\nIf domains is empty, gloo will set the domain to \"*\", making that virtual service the \"default\" virtualservice.\nThe default virtualservice will be the fallback virtual service for all requests that do not match a domain on an existing virtual service.\nOnly one default virtual service can be defined (either with an empty domain list, or a domain list that includes \"*\")",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "defaultValue": ""
            },
            {
              "name": "routes",
              "description": "Routes define the list of [routes](../) that live on this virtual service.",
              "label": "repeated",
              "type": "Route",
              "longType": "Route",
              "fullType": "gloo.api.v1.Route",
              "defaultValue": ""
            },
            {
              "name": "ssl_config",
              "description": "SSL Config is optional for the virtual service. If provided, the virtual service will listen on the envoy HTTPS listener port (default :8443)\nIf left empty, the virtual service will listen on the HTTP listener port (default :8080)",
              "label": "",
              "type": "SSLConfig",
              "longType": "SSLConfig",
              "fullType": "gloo.api.v1.SSLConfig",
              "defaultValue": ""
            },
            {
              "name": "disable_for_gateways",
              "description": "indicates whether or not this virtual service should be assigned to gateway roles automatically\nTODO: eventually this flag will be deprecated; gateway roles will have to explicitly state the virtual services\nthey have access to.",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "defaultValue": ""
            },
            {
              "name": "status",
              "description": "Status indicates the validation status of the virtual service resource. Status is read-only by clients, and set by gloo during validation",
              "label": "",
              "type": "Status",
              "longType": "Status",
              "fullType": "gloo.api.v1.Status",
              "defaultValue": ""
            },
            {
              "name": "metadata",
              "description": "Metadata contains the resource metadata for the virtual service",
              "label": "",
              "type": "Metadata",
              "longType": "Metadata",
              "fullType": "gloo.api.v1.Metadata",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Route",
          "longName": "Route",
          "fullName": "gloo.api.v1.Route",
          "description": "Routes declare the entrypoints on virtual services and the upstreams or functions they route requests to",
          "hasExtensions": false,
          "hasFields": true,
          "extensions": [],
          "fields": [
            {
              "name": "request_matcher",
              "description": "request_matcher indicates this route should match requests according to the specification in the provided RequestMatcher\nonly one of request_matcher or event_matcher can be set",
              "label": "",
              "type": "RequestMatcher",
              "longType": "RequestMatcher",
              "fullType": "gloo.api.v1.RequestMatcher",
              "defaultValue": ""
            },
            {
              "name": "event_matcher",
              "description": "eventt_matcher indicates this route should match requests according to the specification in the provided EventMatcher\nonly one of request_matcher or event_matcher can be set",
              "label": "",
              "type": "EventMatcher",
              "longType": "EventMatcher",
              "fullType": "gloo.api.v1.EventMatcher",
              "defaultValue": ""
            },
            {
              "name": "multiple_destinations",
              "description": "A route is only allowed to specify one of multiple_destinations or single_destination. Setting both will result in an error\nMultiple Destinations is used when a user wants a route to balance requests between multiple destinations\nBalancing is done by probability, where weights are specified for each destination",
              "label": "repeated",
              "type": "WeightedDestination",
              "longType": "WeightedDestination",
              "fullType": "gloo.api.v1.WeightedDestination",
              "defaultValue": ""
            },
            {
              "name": "single_destination",
              "description": "A single destination is specified when a route only routes to a single destination.",
              "label": "",
              "type": "Destination",
              "longType": "Destination",
              "fullType": "gloo.api.v1.Destination",
              "defaultValue": ""
            },
            {
              "name": "prefix_rewrite",
              "description": "PrefixRewrite can be specified to rewrite the matched path of the request path to a new prefix",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "defaultValue": ""
            },
            {
              "name": "extensions",
              "description": "Extensions provides a way to extend the behavior of a route. In addition to the core route extensions\u003c!--(TODO)--\u003e,\ngloo provides the means for route plugins\u003c!--(TODO)--\u003e to be added to gloo which add new types of route extensions.\n\u003c!--See the route extensions section for a more detailed explanation--\u003e",
              "label": "",
              "type": "Struct",
              "longType": "google.protobuf.Struct",
              "fullType": "google.protobuf.Struct",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "RequestMatcher",
          "longName": "RequestMatcher",
          "fullName": "gloo.api.v1.RequestMatcher",
          "description": "Request Matcher is a route matcher for traditional http requests\nRequest Matchers stand in juxtoposition to Event Matchers, which match \"events\" rather than HTTP Requests",
          "hasExtensions": false,
          "hasFields": true,
          "extensions": [],
          "fields": [
            {
              "name": "path_prefix",
              "description": "Prefix will match any request whose path begins with this prefix\nOnly one of path_prefix, path_regex, or path_exact can be set",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "defaultValue": ""
            },
            {
              "name": "path_regex",
              "description": "Regex will match any path that matches this regex string\nOnly one of path_prefix, path_regex, or path_exact can be set",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "defaultValue": ""
            },
            {
              "name": "path_exact",
              "description": "Exact will match only requests with exactly this path\nOnly one of path_prefix, path_regex, or path_exact can be set",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "defaultValue": ""
            },
            {
              "name": "headers",
              "description": "Headers specify a list of request headers and their values the request must contain to match this route\nIf a value is not specified (empty string) for a header, all values will match so long as the header is present on the request",
              "label": "repeated",
              "type": "HeadersEntry",
              "longType": "RequestMatcher.HeadersEntry",
              "fullType": "gloo.api.v1.RequestMatcher.HeadersEntry",
              "defaultValue": ""
            },
            {
              "name": "query_params",
              "description": "Query params work the same way as headers, but for query string parameters",
              "label": "repeated",
              "type": "QueryParamsEntry",
              "longType": "RequestMatcher.QueryParamsEntry",
              "fullType": "gloo.api.v1.RequestMatcher.QueryParamsEntry",
              "defaultValue": ""
            },
            {
              "name": "verbs",
              "description": "HTTP Verb(s) to match on. If none specified, the matcher will match all verbs",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "HeadersEntry",
          "longName": "RequestMatcher.HeadersEntry",
          "fullName": "gloo.api.v1.RequestMatcher.HeadersEntry",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "extensions": [],
          "fields": [
            {
              "name": "key",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "defaultValue": ""
            },
            {
              "name": "value",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "QueryParamsEntry",
          "longName": "RequestMatcher.QueryParamsEntry",
          "fullName": "gloo.api.v1.RequestMatcher.QueryParamsEntry",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "extensions": [],
          "fields": [
            {
              "name": "key",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "defaultValue": ""
            },
            {
              "name": "value",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EventMatcher",
          "longName": "EventMatcher",
          "fullName": "gloo.api.v1.EventMatcher",
          "description": "Event matcher is a special kind of matcher for CloudEvents\nThe CloudEvents API is described here: https://github.com/cloudevents/spec/blob/master/spec.md",
          "hasExtensions": false,
          "hasFields": true,
          "extensions": [],
          "fields": [
            {
              "name": "event_type",
              "description": "Event Type indicates the event type or topic to match",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "WeightedDestination",
          "longName": "WeightedDestination",
          "fullName": "gloo.api.v1.WeightedDestination",
          "description": "WeightedDestination attaches a weight to a destination\nFor use in routes with multiple destinations",
          "hasExtensions": false,
          "hasFields": true,
          "extensions": [],
          "fields": [
            {
              "name": "destination",
              "description": "",
              "label": "",
              "type": "Destination",
              "longType": "Destination",
              "fullType": "gloo.api.v1.Destination",
              "defaultValue": ""
            },
            {
              "name": "weight",
              "description": "Weight must be greater than zero\nRouting to each destination will be balanced by the ratio of the destination's weight to the total weight on a route",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Destination",
          "longName": "Destination",
          "fullName": "gloo.api.v1.Destination",
          "description": "Destination is a destination that requests can be routed to.",
          "hasExtensions": false,
          "hasFields": true,
          "extensions": [],
          "fields": [
            {
              "name": "function",
              "description": "function indicates requests sent to this destination will invoke a function\nOnly one of funtion or upstream should be set",
              "label": "",
              "type": "FunctionDestination",
              "longType": "FunctionDestination",
              "fullType": "gloo.api.v1.FunctionDestination",
              "defaultValue": ""
            },
            {
              "name": "upstream",
              "description": "upstream indicates requests sent to this destination will be routed to an upstream\nOnly one of funtion or upstream should be set",
              "label": "",
              "type": "UpstreamDestination",
              "longType": "UpstreamDestination",
              "fullType": "gloo.api.v1.UpstreamDestination",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "FunctionDestination",
          "longName": "FunctionDestination",
          "fullName": "gloo.api.v1.FunctionDestination",
          "description": "FunctionDestination will route a request to a specific function defined for an upstream",
          "hasExtensions": false,
          "hasFields": true,
          "extensions": [],
          "fields": [
            {
              "name": "upstream_name",
              "description": "Upstream Name is the name of the upstream the function belongs to",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "defaultValue": ""
            },
            {
              "name": "function_name",
              "description": "Function Name is the name of the function as defined on the upstream",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UpstreamDestination",
          "longName": "UpstreamDestination",
          "fullName": "gloo.api.v1.UpstreamDestination",
          "description": "Upstream Destination routes a request to an upstream",
          "hasExtensions": false,
          "hasFields": true,
          "extensions": [],
          "fields": [
            {
              "name": "name",
              "description": "Name of the upstream",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SSLConfig",
          "longName": "SSLConfig",
          "fullName": "gloo.api.v1.SSLConfig",
          "description": "SSLConfig contains the options necessary to configure a virtualservice or listener to use TLS",
          "hasExtensions": false,
          "hasFields": true,
          "extensions": [],
          "fields": [
            {
              "name": "secret_ref",
              "description": "SecretRef contains the secret ref to a gloo secret containing the following structure:\n{\n\"tls.crt\": \u003cca chain data...\u003e,\n\"tls.key\": \u003cprivate key data...\u003e\n}",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "defaultValue": ""
            },
            {
              "name": "ssl_files",
              "description": "SSLFiles reference paths to certificates which are local to the proxy",
              "label": "",
              "type": "SSLFiles",
              "longType": "SSLFiles",
              "fullType": "gloo.api.v1.SSLFiles",
              "defaultValue": ""
            },
            {
              "name": "sni_domains",
              "description": "optional. the SNI domains that should be considered for TLS connections",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SSLFiles",
          "longName": "SSLFiles",
          "fullName": "gloo.api.v1.SSLFiles",
          "description": "SSLFiles reference paths to certificates which can be read by the proxy off of its local filesystem",
          "hasExtensions": false,
          "hasFields": true,
          "extensions": [],
          "fields": [
            {
              "name": "tls_cert",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "defaultValue": ""
            },
            {
              "name": "tls_key",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "defaultValue": ""
            },
            {
              "name": "root_ca",
              "description": "for client cert validation. optional",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    }
  ],
  "scalarValueTypes": [
    {
      "protoType": "double",
      "notes": "",
      "cppType": "double",
      "csType": "double",
      "goType": "float64",
      "javaType": "double",
      "phpType": "float",
      "pythonType": "float",
      "rubyType": "Float"
    },
    {
      "protoType": "float",
      "notes": "",
      "cppType": "float",
      "csType": "float",
      "goType": "float32",
      "javaType": "float",
      "phpType": "float",
      "pythonType": "float",
      "rubyType": "Float"
    },
    {
      "protoType": "int32",
      "notes": "Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint32 instead.",
      "cppType": "int32",
      "csType": "int",
      "goType": "int32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "int64",
      "notes": "Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint64 instead.",
      "cppType": "int64",
      "csType": "long",
      "goType": "int64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum"
    },
    {
      "protoType": "uint32",
      "notes": "Uses variable-length encoding.",
      "cppType": "uint32",
      "csType": "uint",
      "goType": "uint32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int/long",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "uint64",
      "notes": "Uses variable-length encoding.",
      "cppType": "uint64",
      "csType": "ulong",
      "goType": "uint64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "sint32",
      "notes": "Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s.",
      "cppType": "int32",
      "csType": "int",
      "goType": "int32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "sint64",
      "notes": "Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s.",
      "cppType": "int64",
      "csType": "long",
      "goType": "int64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum"
    },
    {
      "protoType": "fixed32",
      "notes": "Always four bytes. More efficient than uint32 if values are often greater than 2^28.",
      "cppType": "uint32",
      "csType": "uint",
      "goType": "uint32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "fixed64",
      "notes": "Always eight bytes. More efficient than uint64 if values are often greater than 2^56.",
      "cppType": "uint64",
      "csType": "ulong",
      "goType": "uint64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum"
    },
    {
      "protoType": "sfixed32",
      "notes": "Always four bytes.",
      "cppType": "int32",
      "csType": "int",
      "goType": "int32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "sfixed64",
      "notes": "Always eight bytes.",
      "cppType": "int64",
      "csType": "long",
      "goType": "int64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum"
    },
    {
      "protoType": "bool",
      "notes": "",
      "cppType": "bool",
      "csType": "bool",
      "goType": "bool",
      "javaType": "boolean",
      "phpType": "boolean",
      "pythonType": "boolean",
      "rubyType": "TrueClass/FalseClass"
    },
    {
      "protoType": "string",
      "notes": "A string must always contain UTF-8 encoded or 7-bit ASCII text.",
      "cppType": "string",
      "csType": "string",
      "goType": "string",
      "javaType": "String",
      "phpType": "string",
      "pythonType": "str/unicode",
      "rubyType": "String (UTF-8)"
    },
    {
      "protoType": "bytes",
      "notes": "May contain any arbitrary sequence of bytes.",
      "cppType": "string",
      "csType": "ByteString",
      "goType": "[]byte",
      "javaType": "ByteString",
      "phpType": "string",
      "pythonType": "str",
      "rubyType": "String (ASCII-8BIT)"
    }
  ]
}