syntax = "proto3";
package gloo.api.v1;
option go_package = "github.com/solo-io/gloo/pkg/api/types/v1";

import "gogoproto/gogo.proto";
option (gogoproto.equal_all) = true;

/**
 * Metadata contains general properties of config resources useful to clients and the gloo control plane for purposes of versioning, annotating, and namespacing resources.
 */
message Metadata {
    // ResourceVersion keeps track of the resource version of a config resource. This mechanism is used by [gloo-storage](https://github.com/solo-io/gloo/pkg/storage) to ensure safety with concurrent writes/updates to a resource in storage.
    string resource_version = 1 [(gogoproto.moretags) = "testdiff:\"ignore\""];
    // Namespace is used for the namespacing of resources. Currently unused by gloo internally.
    string namespace = 2;
    // Annotations allow clients to tag resources for special use cases. gloo ignores annotations but preserved them on read/write from/to storage.
    map<string, string> annotations= 3;
}
