syntax = "proto3";
package ingress.solo.io;
option go_package = "github.com/solo-io/gloo/projects/ingress/pkg/api/v1";

import "gogoproto/gogo.proto";
option (gogoproto.equal_all) = true;
import "google/protobuf/any.proto";

import "solo-kit/api/v1/metadata.proto";
import "solo-kit/api/v1/status.proto";
import "solo-kit/api/v1/solo-kit.proto";
/*
A simple wrapper for a Kubernetes Service Object.
*/
message KubeService{

    option (core.solo.io.resource).short_name = "sv";
    option (core.solo.io.resource).plural_name = "services";
    // a raw byte representation of the kubernetes service this resource wraps
    google.protobuf.Any kube_service_spec = 1;
    // a raw byte representation of the service status of the kubernetes service object
    google.protobuf.Any kube_service_status = 2;

    // Metadata contains the object metadata for this resource
    core.solo.io.Metadata metadata = 7 [(gogoproto.nullable) = false];
}
