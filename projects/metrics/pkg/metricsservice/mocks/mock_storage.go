// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/solo-io/gloo/projects/metrics/pkg/metricsservice (interfaces: StorageClient)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	metricsservice "github.com/solo-io/gloo/projects/metrics/pkg/metricsservice"
)

// MockStorage is a mock of StorageClient interface
type MockStorage struct {
	ctrl     *gomock.Controller
	recorder *MockStorageMockRecorder
}

// MockStorageMockRecorder is the mock recorder for MockStorage
type MockStorageMockRecorder struct {
	mock *MockStorage
}

// NewMockStorage creates a new mock instance
func NewMockStorage(ctrl *gomock.Controller) *MockStorage {
	mock := &MockStorage{ctrl: ctrl}
	mock.recorder = &MockStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockStorage) EXPECT() *MockStorageMockRecorder {
	return m.recorder
}

// GetUsage mocks base method
func (m *MockStorage) GetUsage(arg0 context.Context) (*metricsservice.GlobalUsage, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUsage", arg0)
	ret0, _ := ret[0].(*metricsservice.GlobalUsage)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUsage indicates an expected call of GetUsage
func (mr *MockStorageMockRecorder) GetUsage(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUsage", reflect.TypeOf((*MockStorage)(nil).GetUsage), arg0)
}

// RecordUsage mocks base method
func (m *MockStorage) RecordUsage(arg0 context.Context, arg1 *metricsservice.GlobalUsage) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RecordUsage", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// RecordUsage indicates an expected call of RecordUsage
func (mr *MockStorageMockRecorder) RecordUsage(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RecordUsage", reflect.TypeOf((*MockStorage)(nil).RecordUsage), arg0, arg1)
}
