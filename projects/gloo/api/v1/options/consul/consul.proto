syntax = "proto3";
package consul.options.gloo.solo.io;

option go_package = "github.com/solo-io/gloo/projects/gloo/pkg/api/v1/options/consul";

import "gogoproto/gogo.proto";
option (gogoproto.equal_all) = true;
import "extproto/ext.proto";
option (extproto.hash_all) = true;

import "gloo/projects/gloo/api/v1/options/service_spec.proto";

// Upstream Spec for Consul Upstreams
// consul Upstreams represent a set of one or more addressable pods for a consul Service
// the Gloo consul Upstream maps to a single service port. Because consul Services support multiple ports,
// Gloo requires that a different upstream be created for each port
// consul Upstreams are typically generated automatically by Gloo from the consul API
message UpstreamSpec {
    // The name of the Consul Service
    string service_name = 1;
    // The list of service tags Gloo should search for on a service instance
    // before deciding whether or not to include the instance as part of this
    // upstream
    repeated string service_tags = 2;

    // An optional Service Spec describing the service listening at this address
    .options.gloo.solo.io.ServiceSpec service_spec = 3;

    // Is this consul service connect enabled.
    bool connect_enabled = 4;
    // The data centers in which the service instance represented by this upstream is registered.
    repeated string data_centers = 5;
}
