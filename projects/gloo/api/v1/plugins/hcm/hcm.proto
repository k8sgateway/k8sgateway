syntax = "proto3";
package hcm.plugins.gloo.solo.io;

option go_package = "github.com/solo-io/gloo/projects/gloo/pkg/api/v1/plugins/hcm";

import "gogoproto/gogo.proto";
import "google/protobuf/wrappers.proto";
import "google/protobuf/duration.proto";

option (gogoproto.equal_all) = true;

// Contains various settings for Envoy's http connection manager.
// See here for more information: https://www.envoyproxy.io/docs/envoy/v1.9.0/configuration/http_conn_man/http_conn_man
message HttpConnectionManagerSettings {
    bool skip_xff_append = 1;
    string via = 2;
    uint32 xff_num_trusted_hops = 3;
    google.protobuf.BoolValue use_remote_address = 4;
    google.protobuf.BoolValue generate_request_id = 5;
    bool proxy_100_continue = 6;
    google.protobuf.Duration stream_idle_timeout = 7 [ (gogoproto.stdduration) = true ];
    google.protobuf.Duration idle_timeout = 8 [ (gogoproto.stdduration) = true ];
    google.protobuf.UInt32Value max_request_headers_kb = 9;
    google.protobuf.Duration request_timeout = 10 [ (gogoproto.stdduration) = true ];
    google.protobuf.Duration drain_timeout = 12 [ (gogoproto.stdduration) = true ];
    google.protobuf.Duration delayed_close_timeout = 13 [ (gogoproto.stdduration) = true ];
    string server_name = 14;

    // For explanation of these settings see: https://www.envoyproxy.io/docs/envoy/latest/api-v2/api/v2/core/protocol.proto#envoy-api-msg-core-http1protocoloptions
    bool accept_http_10 = 15;
    string default_host_for_http_10 = 16;

    // Contains settings for configuring Envoy's tracing capabilities at the listener level.
    message TracingSettings {
        // Optional. If specified, Envoy will include the headers and header values for any matching request headers.
        repeated string request_headers_for_tags = 1;
        // Optional. If true, Envoy will include logs for streaming events. Default: false.
        bool verbose = 2;
    }
    TracingSettings tracing = 17;
}

// Contains settings for configuring Envoy's tracing capabilities at the route level.
// Note: must also specify ListenerTracingSettings for the associated listener.
message RouteTracingSettings {
    // Optional. If set, will be used to identify the route that produced the trace.
    // Note that this value will be overridden if the "x-envoy-decorator-operation" header is passed.
    string route_descriptor = 1;
}
