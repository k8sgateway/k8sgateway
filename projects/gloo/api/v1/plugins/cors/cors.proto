syntax = "proto3";
package cors.plugins.gloo.solo.io;

option go_package = "github.com/solo-io/gloo/projects/gloo/pkg/api/v1/plugins/cors";

import "gogoproto/gogo.proto";
import "google/protobuf/wrappers.proto";
import "google/protobuf/duration.proto";

option (gogoproto.equal_all) = true;

// CorsPolicy defines Cross-Origin Resource Sharing for a virtual service.
message CorsPolicy {
    // Specifies the origins that will be allowed to make CORS requests.
    //
    // An origin is allowed if either allow_origin or allow_origin_regex match.
    repeated string allow_origin = 1;

    // Specifies regex patterns that match origins that will be allowed to make
    // CORS requests.
    //
    // An origin is allowed if either allow_origin or allow_origin_regex match.
    repeated string allow_origin_regex = 2;

    // Specifies the content for the *access-control-allow-methods* header.
    repeated string allow_methods = 3;

    // Specifies the content for the *access-control-allow-headers* header.
    repeated string allow_headers = 4;

    // Specifies the content for the *access-control-expose-headers* header.
    repeated string expose_headers = 5;

    // Specifies the content for the *access-control-max-age* header.
    string max_age = 6;

    // Specifies whether the resource allows credentials.
    bool allow_credentials = 7;

    // Envoy supports toggling CORS during runtime. Implement as need arises.
    // Allows a preview of CORS settings. If set, evaluates and reports CORS but
    // does not enforce it.
    // bool preview = 8;
}