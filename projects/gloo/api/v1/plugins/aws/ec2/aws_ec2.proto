syntax = "proto3";
package aws_ec2.plugins.gloo.solo.io;

option go_package = "github.com/solo-io/gloo/projects/gloo/pkg/api/v1/plugins/aws/glooec2";

import "gogoproto/gogo.proto";
option (gogoproto.equal_all) = true;

import "github.com/solo-io/solo-kit/api/v1/ref.proto";

// Upstream Spec for AWS Lambda Upstreams
// AWS Upstreams represent a collection of Lambda Functions for a particular AWS Account (IAM Role or User account)
// in a particular region
message UpstreamSpec {
    // The AWS Region where the desired EC2 instances exist
    string region = 1;

    // A [Gloo Secret Ref](https://gloo.solo.io/introduction/concepts/#Secrets) to an AWS Secret
    // AWS Secrets can be created with `glooctl secret create aws ...`
    // If the secret is created manually, it must conform to the following structure:
    //  ```
    //  access_key: <aws access key>
    //  secret_key: <aws secret key>
    //  ```
    core.solo.io.ResourceRef secret_ref = 2 [(gogoproto.nullable) = false];

    // List of tag filters for selecting instances
    // An instance must match all the filters in order to be selected
    // Filter keys are not case-sensitive
    repeated TagFilter filters = 3;

    // If set, will use the EC2 public IP address. Defaults to the private IP address.
    bool public_ip = 4;

    // If set, will use this port on EC2 instances. Defaults to port 80.
    uint32 port = 5;
}

message TagFilter {
    message KvPair {
        // keys are not case-sensitive, as with AWS Condition Keys
        string key = 1;
        // values are case-sensitive
        string value = 2;
    }
    oneof spec {
        // if set, only instances that have a tag with this key will be matched
        // keys are not case-sensitive, as with AWS Condition Keys
        string key = 1;
        // if set, only instances that have a tag with this key and value
        KvPair kv_pair = 2;
    }
}

