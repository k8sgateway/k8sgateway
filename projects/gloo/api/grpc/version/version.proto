syntax = "proto3";
package gloo.solo.io;
option go_package = "github.com/solo-io/gloo/projects/gloo/pkg/api/grpc/version";

//import "google/protobuf/any.proto";
//import "google/protobuf/duration.proto";
//import "google/protobuf/struct.proto";
//import "google/protobuf/wrappers.proto";

import "github.com/solo-io/solo-kit/api/external/validate/validate.proto";
import "gogoproto/gogo.proto";

option (gogoproto.equal_all) = true;

message VersionRequest {}

message VersionResponse {
    ServerVersion server_version = 1 [(validate.rules).duration = {required: true}];
}

message ServerVersion {

    oneof version_type {
        option (validate.required) = true;
        Kubernetes kubernetes = 1;
    }
}

message Kubernetes {

    message Container {
         string Tag = 1;
         string Repository = 2;
         string Registry = 3;
    }

    repeated Container containers = 1;
}

message ClientVersion {
    string version = 1;
}

message Version {
    ClientVersion client_version = 1;
    ServerVersion server_version = 2;
}

