syntax = "proto3";

package solo.io.extensions.network.dns_resolver.cares.v3;

import "github.com/solo-io/gloo/projects/gloo/api/external/envoy/config/core/v3/address.proto";
import "projects/gloo/api/external/envoy/config/core/v3/resolver.proto";

import "validate/validate.proto";

option java_package = "io.envoyproxy.envoy.extensions.network.dns_resolver.cares.v3";
option java_outer_classname = "CaresDnsResolverProto";
option java_multiple_files = true;
option go_package = "github.com/solo-io/gloo/projects/gloo/pkg/api/external/envoy/extensions/network/dns_resolver/cares/v3";

// [#protodoc-title: c-ares DNS resolver]
// [#extension: envoy.network.dns_resolver.cares]

// Configuration for c-ares DNS resolver.
message CaresDnsResolverConfig {
  // A list of dns resolver addresses.
  // :ref:`use_resolvers_as_fallback<envoy_v3_api_field_extensions.network.dns_resolver.cares.v3.CaresDnsResolverConfig.use_resolvers_as_fallback>`
  // below dictates if the DNS client should override system defaults or only use the provided
  // resolvers if the system defaults are not available, i.e., as a fallback.
  repeated .solo.io.envoy.config.core.v3.Address resolvers = 1 [(validate.rules).repeated = {min_items: 1}];

  // Configuration of DNS resolver option flags which control the behavior of the DNS resolver.
  .solo.io.config.core.v3.DnsResolverOptions dns_resolver_options = 2;
}