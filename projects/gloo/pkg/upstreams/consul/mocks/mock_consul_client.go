// Code generated by MockGen. DO NOT EDIT.
// Source: consul_client.go

// Package mock_consul is a generated GoMock package.
package mock_consul

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	api "github.com/hashicorp/consul/api"
)

// MockInternalConsulClient is a mock of InternalConsulClient interface.
type MockInternalConsulClient struct {
	ctrl     *gomock.Controller
	recorder *MockInternalConsulClientMockRecorder
}

// MockInternalConsulClientMockRecorder is the mock recorder for MockInternalConsulClient.
type MockInternalConsulClientMockRecorder struct {
	mock *MockInternalConsulClient
}

// NewMockInternalConsulClient creates a new mock instance.
func NewMockInternalConsulClient(ctrl *gomock.Controller) *MockInternalConsulClient {
	mock := &MockInternalConsulClient{ctrl: ctrl}
	mock.recorder = &MockInternalConsulClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockInternalConsulClient) EXPECT() *MockInternalConsulClientMockRecorder {
	return m.recorder
}

// Connect mocks base method.
func (m *MockInternalConsulClient) Connect(service, tag string, q *api.QueryOptions) ([]*api.CatalogService, *api.QueryMeta, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Connect", service, tag, q)
	ret0, _ := ret[0].([]*api.CatalogService)
	ret1, _ := ret[1].(*api.QueryMeta)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// Connect indicates an expected call of Connect.
func (mr *MockInternalConsulClientMockRecorder) Connect(service, tag, q interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Connect", reflect.TypeOf((*MockInternalConsulClient)(nil).Connect), service, tag, q)
}

// DataCenters mocks base method.
func (m *MockInternalConsulClient) DataCenters() ([]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DataCenters")
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DataCenters indicates an expected call of DataCenters.
func (mr *MockInternalConsulClientMockRecorder) DataCenters() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DataCenters", reflect.TypeOf((*MockInternalConsulClient)(nil).DataCenters))
}

// Service mocks base method.
func (m *MockInternalConsulClient) Service(service, tag string, q *api.QueryOptions) ([]*api.CatalogService, *api.QueryMeta, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Service", service, tag, q)
	ret0, _ := ret[0].([]*api.CatalogService)
	ret1, _ := ret[1].(*api.QueryMeta)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// Service indicates an expected call of Service.
func (mr *MockInternalConsulClientMockRecorder) Service(service, tag, q interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Service", reflect.TypeOf((*MockInternalConsulClient)(nil).Service), service, tag, q)
}

// Services mocks base method.
func (m *MockInternalConsulClient) Services(q *api.QueryOptions) (map[string][]string, *api.QueryMeta, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Services", q)
	ret0, _ := ret[0].(map[string][]string)
	ret1, _ := ret[1].(*api.QueryMeta)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// Services indicates an expected call of Services.
func (mr *MockInternalConsulClientMockRecorder) Services(q interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Services", reflect.TypeOf((*MockInternalConsulClient)(nil).Services), q)
}
