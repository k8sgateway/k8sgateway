// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: github.com/solo-io/gloo/projects/gloo/api/grpc/version/version.proto

package version

import (
	bytes "bytes"
	fmt "fmt"
	math "math"

	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type GlooType int32

const (
	GlooType_Unknown    GlooType = 0
	GlooType_Gateway    GlooType = 1
	GlooType_Enterprise GlooType = 2
	GlooType_Ingress    GlooType = 3
	GlooType_Knative    GlooType = 4
)

var GlooType_name = map[int32]string{
	0: "Unknown",
	1: "Gateway",
	2: "Enterprise",
	3: "Ingress",
	4: "Knative",
}

var GlooType_value = map[string]int32{
	"Unknown":    0,
	"Gateway":    1,
	"Enterprise": 2,
	"Ingress":    3,
	"Knative":    4,
}

func (x GlooType) String() string {
	return proto.EnumName(GlooType_name, int32(x))
}

func (GlooType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_8b3001fc11d63463, []int{0}
}

type VersionRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VersionRequest) Reset()         { *m = VersionRequest{} }
func (m *VersionRequest) String() string { return proto.CompactTextString(m) }
func (*VersionRequest) ProtoMessage()    {}
func (*VersionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b3001fc11d63463, []int{0}
}
func (m *VersionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VersionRequest.Unmarshal(m, b)
}
func (m *VersionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VersionRequest.Marshal(b, m, deterministic)
}
func (m *VersionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VersionRequest.Merge(m, src)
}
func (m *VersionRequest) XXX_Size() int {
	return xxx_messageInfo_VersionRequest.Size(m)
}
func (m *VersionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VersionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VersionRequest proto.InternalMessageInfo

type VersionResponse struct {
	Version              *Version `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VersionResponse) Reset()         { *m = VersionResponse{} }
func (m *VersionResponse) String() string { return proto.CompactTextString(m) }
func (*VersionResponse) ProtoMessage()    {}
func (*VersionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b3001fc11d63463, []int{1}
}
func (m *VersionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VersionResponse.Unmarshal(m, b)
}
func (m *VersionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VersionResponse.Marshal(b, m, deterministic)
}
func (m *VersionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VersionResponse.Merge(m, src)
}
func (m *VersionResponse) XXX_Size() int {
	return xxx_messageInfo_VersionResponse.Size(m)
}
func (m *VersionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VersionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VersionResponse proto.InternalMessageInfo

func (m *VersionResponse) GetVersion() *Version {
	if m != nil {
		return m.Version
	}
	return nil
}

type ServerVersion struct {
	// Types that are valid to be assigned to VersionType:
	//	*ServerVersion_Kubernetes
	VersionType          isServerVersion_VersionType `protobuf_oneof:"version_type"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *ServerVersion) Reset()         { *m = ServerVersion{} }
func (m *ServerVersion) String() string { return proto.CompactTextString(m) }
func (*ServerVersion) ProtoMessage()    {}
func (*ServerVersion) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b3001fc11d63463, []int{2}
}
func (m *ServerVersion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerVersion.Unmarshal(m, b)
}
func (m *ServerVersion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerVersion.Marshal(b, m, deterministic)
}
func (m *ServerVersion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerVersion.Merge(m, src)
}
func (m *ServerVersion) XXX_Size() int {
	return xxx_messageInfo_ServerVersion.Size(m)
}
func (m *ServerVersion) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerVersion.DiscardUnknown(m)
}

var xxx_messageInfo_ServerVersion proto.InternalMessageInfo

type isServerVersion_VersionType interface {
	isServerVersion_VersionType()
	Equal(interface{}) bool
}

type ServerVersion_Kubernetes struct {
	Kubernetes *Kubernetes `protobuf:"bytes,1,opt,name=kubernetes,proto3,oneof" json:"kubernetes,omitempty"`
}

func (*ServerVersion_Kubernetes) isServerVersion_VersionType() {}

func (m *ServerVersion) GetVersionType() isServerVersion_VersionType {
	if m != nil {
		return m.VersionType
	}
	return nil
}

func (m *ServerVersion) GetKubernetes() *Kubernetes {
	if x, ok := m.GetVersionType().(*ServerVersion_Kubernetes); ok {
		return x.Kubernetes
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ServerVersion) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ServerVersion_Kubernetes)(nil),
	}
}

type Kubernetes struct {
	Containers           []*Kubernetes_Container `protobuf:"bytes,1,rep,name=containers,proto3" json:"containers,omitempty"`
	Namespace            string                  `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Type                 GlooType                `protobuf:"varint,3,opt,name=type,proto3,enum=gloo.solo.io.GlooType" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *Kubernetes) Reset()         { *m = Kubernetes{} }
func (m *Kubernetes) String() string { return proto.CompactTextString(m) }
func (*Kubernetes) ProtoMessage()    {}
func (*Kubernetes) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b3001fc11d63463, []int{3}
}
func (m *Kubernetes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Kubernetes.Unmarshal(m, b)
}
func (m *Kubernetes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Kubernetes.Marshal(b, m, deterministic)
}
func (m *Kubernetes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Kubernetes.Merge(m, src)
}
func (m *Kubernetes) XXX_Size() int {
	return xxx_messageInfo_Kubernetes.Size(m)
}
func (m *Kubernetes) XXX_DiscardUnknown() {
	xxx_messageInfo_Kubernetes.DiscardUnknown(m)
}

var xxx_messageInfo_Kubernetes proto.InternalMessageInfo

func (m *Kubernetes) GetContainers() []*Kubernetes_Container {
	if m != nil {
		return m.Containers
	}
	return nil
}

func (m *Kubernetes) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *Kubernetes) GetType() GlooType {
	if m != nil {
		return m.Type
	}
	return GlooType_Unknown
}

type Kubernetes_Container struct {
	Tag                  string   `protobuf:"bytes,1,opt,name=Tag,proto3" json:"Tag,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Registry             string   `protobuf:"bytes,3,opt,name=Registry,proto3" json:"Registry,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Kubernetes_Container) Reset()         { *m = Kubernetes_Container{} }
func (m *Kubernetes_Container) String() string { return proto.CompactTextString(m) }
func (*Kubernetes_Container) ProtoMessage()    {}
func (*Kubernetes_Container) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b3001fc11d63463, []int{3, 0}
}
func (m *Kubernetes_Container) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Kubernetes_Container.Unmarshal(m, b)
}
func (m *Kubernetes_Container) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Kubernetes_Container.Marshal(b, m, deterministic)
}
func (m *Kubernetes_Container) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Kubernetes_Container.Merge(m, src)
}
func (m *Kubernetes_Container) XXX_Size() int {
	return xxx_messageInfo_Kubernetes_Container.Size(m)
}
func (m *Kubernetes_Container) XXX_DiscardUnknown() {
	xxx_messageInfo_Kubernetes_Container.DiscardUnknown(m)
}

var xxx_messageInfo_Kubernetes_Container proto.InternalMessageInfo

func (m *Kubernetes_Container) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

func (m *Kubernetes_Container) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Kubernetes_Container) GetRegistry() string {
	if m != nil {
		return m.Registry
	}
	return ""
}

type ClientVersion struct {
	Version              string   `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClientVersion) Reset()         { *m = ClientVersion{} }
func (m *ClientVersion) String() string { return proto.CompactTextString(m) }
func (*ClientVersion) ProtoMessage()    {}
func (*ClientVersion) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b3001fc11d63463, []int{4}
}
func (m *ClientVersion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientVersion.Unmarshal(m, b)
}
func (m *ClientVersion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientVersion.Marshal(b, m, deterministic)
}
func (m *ClientVersion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientVersion.Merge(m, src)
}
func (m *ClientVersion) XXX_Size() int {
	return xxx_messageInfo_ClientVersion.Size(m)
}
func (m *ClientVersion) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientVersion.DiscardUnknown(m)
}

var xxx_messageInfo_ClientVersion proto.InternalMessageInfo

func (m *ClientVersion) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

type Version struct {
	Client               *ClientVersion `protobuf:"bytes,1,opt,name=client,proto3" json:"client,omitempty"`
	Server               *ServerVersion `protobuf:"bytes,2,opt,name=server,proto3" json:"server,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Version) Reset()         { *m = Version{} }
func (m *Version) String() string { return proto.CompactTextString(m) }
func (*Version) ProtoMessage()    {}
func (*Version) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b3001fc11d63463, []int{5}
}
func (m *Version) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Version.Unmarshal(m, b)
}
func (m *Version) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Version.Marshal(b, m, deterministic)
}
func (m *Version) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Version.Merge(m, src)
}
func (m *Version) XXX_Size() int {
	return xxx_messageInfo_Version.Size(m)
}
func (m *Version) XXX_DiscardUnknown() {
	xxx_messageInfo_Version.DiscardUnknown(m)
}

var xxx_messageInfo_Version proto.InternalMessageInfo

func (m *Version) GetClient() *ClientVersion {
	if m != nil {
		return m.Client
	}
	return nil
}

func (m *Version) GetServer() *ServerVersion {
	if m != nil {
		return m.Server
	}
	return nil
}

func init() {
	proto.RegisterEnum("gloo.solo.io.GlooType", GlooType_name, GlooType_value)
	proto.RegisterType((*VersionRequest)(nil), "gloo.solo.io.VersionRequest")
	proto.RegisterType((*VersionResponse)(nil), "gloo.solo.io.VersionResponse")
	proto.RegisterType((*ServerVersion)(nil), "gloo.solo.io.ServerVersion")
	proto.RegisterType((*Kubernetes)(nil), "gloo.solo.io.Kubernetes")
	proto.RegisterType((*Kubernetes_Container)(nil), "gloo.solo.io.Kubernetes.Container")
	proto.RegisterType((*ClientVersion)(nil), "gloo.solo.io.ClientVersion")
	proto.RegisterType((*Version)(nil), "gloo.solo.io.Version")
}

func init() {
	proto.RegisterFile("github.com/solo-io/gloo/projects/gloo/api/grpc/version/version.proto", fileDescriptor_8b3001fc11d63463)
}

var fileDescriptor_8b3001fc11d63463 = []byte{
	// 498 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x53, 0xcf, 0x6e, 0xd3, 0x4c,
	0x10, 0xaf, 0xe3, 0xb4, 0xa9, 0x27, 0x6d, 0x3e, 0x6b, 0xf5, 0x15, 0x45, 0x01, 0xa1, 0xc8, 0xa7,
	0x50, 0x09, 0x5b, 0x4a, 0x6f, 0xe5, 0x52, 0xa5, 0xa0, 0x82, 0x2a, 0x72, 0x58, 0x0a, 0x07, 0x2e,
	0x68, 0x63, 0x46, 0x66, 0x89, 0xb3, 0x6b, 0x76, 0x37, 0x29, 0x79, 0x05, 0x9e, 0x84, 0x47, 0x40,
	0x9c, 0xfa, 0x2c, 0xdc, 0xf2, 0x16, 0x68, 0x37, 0x76, 0x12, 0xab, 0x20, 0x71, 0xda, 0x99, 0xd9,
	0xdf, 0x9f, 0xf1, 0x8c, 0x17, 0x9e, 0x67, 0xdc, 0x7c, 0x9a, 0x4f, 0xe2, 0x54, 0xce, 0x12, 0x2d,
	0x73, 0xf9, 0x94, 0xcb, 0x24, 0xcb, 0xa5, 0x4c, 0x0a, 0x25, 0x3f, 0x63, 0x6a, 0xf4, 0x3a, 0x63,
	0x05, 0x4f, 0x32, 0x55, 0xa4, 0xc9, 0x02, 0x95, 0xe6, 0x52, 0x54, 0x67, 0x5c, 0x28, 0x69, 0x24,
	0x39, 0xb2, 0xa0, 0xd8, 0xf2, 0x63, 0x2e, 0x7b, 0x17, 0x7f, 0xd0, 0x74, 0xe7, 0x94, 0x1b, 0xa7,
	0x84, 0x5f, 0x0d, 0x2a, 0xc1, 0xf2, 0x64, 0xc1, 0x72, 0xfe, 0x91, 0x19, 0xdc, 0x04, 0x6b, 0xbd,
	0xde, 0xff, 0x99, 0xcc, 0xa4, 0x0b, 0x13, 0x1b, 0xad, 0xab, 0x51, 0x08, 0x9d, 0x77, 0x6b, 0x5b,
	0x8a, 0x5f, 0xe6, 0xa8, 0x4d, 0x34, 0x86, 0xff, 0x36, 0x15, 0x5d, 0x48, 0xa1, 0x91, 0x3c, 0x83,
	0x56, 0xd9, 0x5b, 0xd7, 0xeb, 0x7b, 0x83, 0xf6, 0xf0, 0x24, 0xde, 0x6d, 0x2e, 0x2e, 0xf1, 0x23,
	0xf8, 0xb9, 0xba, 0xf3, 0xf7, 0xbf, 0x79, 0x8d, 0xd0, 0xa3, 0x15, 0x23, 0x9a, 0xc0, 0xf1, 0x1b,
	0x54, 0x0b, 0x54, 0x25, 0x8a, 0x9c, 0x03, 0x4c, 0xe7, 0x13, 0x54, 0x02, 0x0d, 0xea, 0x52, 0xb0,
	0x5b, 0x17, 0xbc, 0xde, 0xdc, 0xbf, 0xdc, 0xa3, 0x3b, 0xe8, 0xd1, 0x09, 0x1c, 0x95, 0xba, 0x1f,
	0xcc, 0xb2, 0x40, 0xb2, 0xff, 0x63, 0x75, 0xe7, 0x7b, 0xd1, 0xca, 0x03, 0xd8, 0x72, 0xc8, 0x08,
	0x20, 0x95, 0xc2, 0x30, 0x2e, 0x50, 0x59, 0x07, 0x7f, 0xd0, 0x1e, 0x46, 0x7f, 0x73, 0x88, 0x2f,
	0x2b, 0x28, 0xdd, 0x61, 0x91, 0x47, 0x10, 0x08, 0x36, 0x43, 0x5d, 0xb0, 0x14, 0xbb, 0x8d, 0xbe,
	0x37, 0x08, 0xe8, 0xb6, 0x40, 0x4e, 0xa1, 0x69, 0xfd, 0xbb, 0x7e, 0xdf, 0x1b, 0x74, 0x86, 0x0f,
	0xea, 0xda, 0x57, 0xb9, 0x94, 0x37, 0xcb, 0x02, 0xa9, 0xc3, 0xf4, 0x5e, 0x43, 0xb0, 0xb1, 0x20,
	0x21, 0xf8, 0x37, 0x2c, 0x73, 0x5f, 0x1d, 0x50, 0x1b, 0x12, 0x02, 0xcd, 0x31, 0x9b, 0x55, 0x1e,
	0x2e, 0x26, 0x3d, 0x38, 0xa4, 0x98, 0x71, 0x6d, 0xd4, 0xd2, 0x59, 0x04, 0x74, 0x93, 0x47, 0x4f,
	0xe0, 0xf8, 0x32, 0xe7, 0x28, 0x4c, 0x35, 0xcf, 0x6e, 0x7d, 0x3b, 0xc1, 0x76, 0xf4, 0x1a, 0x5a,
	0x15, 0xe8, 0x0c, 0x0e, 0x52, 0xc7, 0x2a, 0x07, 0xfe, 0xb0, 0xde, 0x72, 0x4d, 0x91, 0x96, 0x50,
	0x4b, 0xd2, 0x6e, 0x75, 0xae, 0xb9, 0x7b, 0xa4, 0xda, 0x5a, 0x69, 0x09, 0x3d, 0x1d, 0xc3, 0x61,
	0x35, 0x00, 0xd2, 0x86, 0xd6, 0x5b, 0x31, 0x15, 0xf2, 0x56, 0x84, 0x7b, 0x36, 0xb9, 0x62, 0x06,
	0x6f, 0xd9, 0x32, 0xf4, 0x48, 0x07, 0xe0, 0x85, 0x30, 0xa8, 0x0a, 0xc5, 0x35, 0x86, 0x0d, 0x7b,
	0xf9, 0x4a, 0x64, 0x0a, 0xb5, 0x0e, 0x7d, 0x9b, 0x5c, 0x0b, 0x66, 0xf8, 0x02, 0xc3, 0xe6, 0xe8,
	0xe2, 0xfb, 0xaf, 0xc7, 0xde, 0xfb, 0xf3, 0x7f, 0x7b, 0x53, 0xc5, 0x34, 0xbb, 0xf7, 0xae, 0x26,
	0x07, 0xee, 0x57, 0x3f, 0xfb, 0x1d, 0x00, 0x00, 0xff, 0xff, 0x8f, 0x45, 0x66, 0xe6, 0x98, 0x03,
	0x00, 0x00,
}

func (this *VersionRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*VersionRequest)
	if !ok {
		that2, ok := that.(VersionRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *VersionResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*VersionResponse)
	if !ok {
		that2, ok := that.(VersionResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Version.Equal(that1.Version) {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *ServerVersion) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServerVersion)
	if !ok {
		that2, ok := that.(ServerVersion)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if that1.VersionType == nil {
		if this.VersionType != nil {
			return false
		}
	} else if this.VersionType == nil {
		return false
	} else if !this.VersionType.Equal(that1.VersionType) {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *ServerVersion_Kubernetes) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ServerVersion_Kubernetes)
	if !ok {
		that2, ok := that.(ServerVersion_Kubernetes)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Kubernetes.Equal(that1.Kubernetes) {
		return false
	}
	return true
}
func (this *Kubernetes) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Kubernetes)
	if !ok {
		that2, ok := that.(Kubernetes)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.Containers) != len(that1.Containers) {
		return false
	}
	for i := range this.Containers {
		if !this.Containers[i].Equal(that1.Containers[i]) {
			return false
		}
	}
	if this.Namespace != that1.Namespace {
		return false
	}
	if this.Type != that1.Type {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *Kubernetes_Container) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Kubernetes_Container)
	if !ok {
		that2, ok := that.(Kubernetes_Container)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Tag != that1.Tag {
		return false
	}
	if this.Name != that1.Name {
		return false
	}
	if this.Registry != that1.Registry {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *ClientVersion) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ClientVersion)
	if !ok {
		that2, ok := that.(ClientVersion)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Version != that1.Version {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *Version) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Version)
	if !ok {
		that2, ok := that.(Version)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Client.Equal(that1.Client) {
		return false
	}
	if !this.Server.Equal(that1.Server) {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
