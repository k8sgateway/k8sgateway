// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: github.com/solo-io/gloo/projects/gloo/api/external/envoy/extensions/proxylatency/proxylatency.proto

package proxylatency

import (
	bytes "bytes"
	fmt "fmt"
	math "math"

	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// How to perform the latency measurement. Given an incoming request from downstream and
// outging request to upstream; or incoming response from upstream and outgoing repsonse to
// downstream, This outlines how to measure the latency used by the proxy.
// Latency is measured in milliseconds will appear as a histogram in the envoy stats, with the
// 'proxy_latency' prefix.
type ProxyLatency_Measurement int32

const (
	// Count from the last byte of the incoming request\response to the first byte of the outgoing request\response.
	ProxyLatency_LAST_INCOMING_FIRST_OUTGOING ProxyLatency_Measurement = 0
	// Count from the first byte of the incoming request\response to the first byte of the outgoing request\response.
	ProxyLatency_FIRST_INCOMING_FIRST_OUTGOING ProxyLatency_Measurement = 1
	// Count from the last byte of the incoming request\response to the last byte of the outgoing request\response.
	ProxyLatency_LAST_INCOMING_LAST_OUTGOING ProxyLatency_Measurement = 2
	// Count from the first byte of the incoming request\response to the last byte of the outgoing request\response.
	ProxyLatency_FIRST_INCOMING_LAST_OUTGOING ProxyLatency_Measurement = 3
)

var ProxyLatency_Measurement_name = map[int32]string{
	0: "LAST_INCOMING_FIRST_OUTGOING",
	1: "FIRST_INCOMING_FIRST_OUTGOING",
	2: "LAST_INCOMING_LAST_OUTGOING",
	3: "FIRST_INCOMING_LAST_OUTGOING",
}

var ProxyLatency_Measurement_value = map[string]int32{
	"LAST_INCOMING_FIRST_OUTGOING":  0,
	"FIRST_INCOMING_FIRST_OUTGOING": 1,
	"LAST_INCOMING_LAST_OUTGOING":   2,
	"FIRST_INCOMING_LAST_OUTGOING":  3,
}

func (x ProxyLatency_Measurement) String() string {
	return proto.EnumName(ProxyLatency_Measurement_name, int32(x))
}

func (ProxyLatency_Measurement) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b72148e2a3523d34, []int{0, 0}
}

// Configure the proxy latency filter. This filter measures the latency
// incurred by the filter chain in a histogram.
type ProxyLatency struct {
	// How to measure the request.
	Request ProxyLatency_Measurement `protobuf:"varint,1,opt,name=request,proto3,enum=envoy.config.filter.http.proxylatency.v2.ProxyLatency_Measurement" json:"request,omitempty"`
	// How measure the response.
	Response ProxyLatency_Measurement `protobuf:"varint,2,opt,name=response,proto3,enum=envoy.config.filter.http.proxylatency.v2.ProxyLatency_Measurement" json:"response,omitempty"`
	// Charge a stat per upstream cluster. If not specified, defaults to true.
	ChargeClusterStat *types.BoolValue `protobuf:"bytes,3,opt,name=charge_cluster_stat,json=chargeClusterStat,proto3" json:"charge_cluster_stat,omitempty"`
	// Charge a stat per listener. If not specified, defaults to true.
	ChargeListenerStat   *types.BoolValue `protobuf:"bytes,4,opt,name=charge_listener_stat,json=chargeListenerStat,proto3" json:"charge_listener_stat,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ProxyLatency) Reset()         { *m = ProxyLatency{} }
func (m *ProxyLatency) String() string { return proto.CompactTextString(m) }
func (*ProxyLatency) ProtoMessage()    {}
func (*ProxyLatency) Descriptor() ([]byte, []int) {
	return fileDescriptor_b72148e2a3523d34, []int{0}
}
func (m *ProxyLatency) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProxyLatency.Unmarshal(m, b)
}
func (m *ProxyLatency) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProxyLatency.Marshal(b, m, deterministic)
}
func (m *ProxyLatency) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProxyLatency.Merge(m, src)
}
func (m *ProxyLatency) XXX_Size() int {
	return xxx_messageInfo_ProxyLatency.Size(m)
}
func (m *ProxyLatency) XXX_DiscardUnknown() {
	xxx_messageInfo_ProxyLatency.DiscardUnknown(m)
}

var xxx_messageInfo_ProxyLatency proto.InternalMessageInfo

func (m *ProxyLatency) GetRequest() ProxyLatency_Measurement {
	if m != nil {
		return m.Request
	}
	return ProxyLatency_LAST_INCOMING_FIRST_OUTGOING
}

func (m *ProxyLatency) GetResponse() ProxyLatency_Measurement {
	if m != nil {
		return m.Response
	}
	return ProxyLatency_LAST_INCOMING_FIRST_OUTGOING
}

func (m *ProxyLatency) GetChargeClusterStat() *types.BoolValue {
	if m != nil {
		return m.ChargeClusterStat
	}
	return nil
}

func (m *ProxyLatency) GetChargeListenerStat() *types.BoolValue {
	if m != nil {
		return m.ChargeListenerStat
	}
	return nil
}

func init() {
	proto.RegisterEnum("envoy.config.filter.http.proxylatency.v2.ProxyLatency_Measurement", ProxyLatency_Measurement_name, ProxyLatency_Measurement_value)
	proto.RegisterType((*ProxyLatency)(nil), "envoy.config.filter.http.proxylatency.v2.ProxyLatency")
}

func init() {
	proto.RegisterFile("github.com/solo-io/gloo/projects/gloo/api/external/envoy/extensions/proxylatency/proxylatency.proto", fileDescriptor_b72148e2a3523d34)
}

var fileDescriptor_b72148e2a3523d34 = []byte{
	// 394 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x92, 0xd1, 0x6a, 0x13, 0x41,
	0x14, 0x86, 0xdd, 0x46, 0x54, 0xa6, 0x22, 0x3a, 0xf6, 0x22, 0x44, 0xad, 0xb1, 0x57, 0xb9, 0x71,
	0x06, 0xe2, 0x13, 0x98, 0x82, 0x21, 0xb2, 0x4d, 0x24, 0x59, 0xbd, 0x28, 0xe2, 0x32, 0x59, 0x4e,
	0x26, 0xab, 0xd3, 0x39, 0xe3, 0xcc, 0xd9, 0xda, 0x3c, 0x88, 0xef, 0xe0, 0x73, 0xf9, 0x20, 0x22,
	0xbb, 0xd3, 0x94, 0xae, 0x20, 0x46, 0xe8, 0xdd, 0xfc, 0x87, 0xff, 0xff, 0xe6, 0xf0, 0x73, 0x58,
	0xa1, 0x4b, 0x5a, 0x57, 0x4b, 0x51, 0xe0, 0x99, 0x0c, 0x68, 0xf0, 0x65, 0x89, 0x52, 0x1b, 0x44,
	0xe9, 0x3c, 0x7e, 0x86, 0x82, 0x42, 0x54, 0xca, 0x95, 0x12, 0x2e, 0x08, 0xbc, 0x55, 0x46, 0x82,
	0x3d, 0xc7, 0x4d, 0x23, 0x6d, 0x28, 0xd1, 0x86, 0xda, 0x7b, 0xb1, 0x31, 0x8a, 0xc0, 0x16, 0x9b,
	0x96, 0x10, 0xce, 0x23, 0x21, 0x1f, 0x34, 0x09, 0x51, 0xa0, 0x5d, 0x95, 0x5a, 0xac, 0x4a, 0x43,
	0xe0, 0xc5, 0x9a, 0xc8, 0x89, 0x96, 0xf9, 0x7c, 0xd8, 0x3b, 0xd4, 0x88, 0xda, 0x80, 0x6c, 0x72,
	0xcb, 0x6a, 0x25, 0xbf, 0x79, 0xe5, 0x1c, 0xf8, 0x10, 0x49, 0xbd, 0x03, 0x8d, 0x1a, 0x9b, 0xa7,
	0xac, 0x5f, 0x71, 0x7a, 0xf4, 0xab, 0xc3, 0xee, 0xbf, 0xab, 0x49, 0x69, 0x24, 0xf1, 0x8f, 0xec,
	0xae, 0x87, 0xaf, 0x15, 0x04, 0xea, 0x26, 0xfd, 0x64, 0xf0, 0x60, 0x38, 0x12, 0xbb, 0xae, 0x20,
	0xae, 0x83, 0xc4, 0x09, 0xa8, 0x50, 0x79, 0x38, 0x03, 0x4b, 0xf3, 0x2d, 0x92, 0x7f, 0x62, 0xf7,
	0x3c, 0x04, 0x87, 0x36, 0x40, 0x77, 0xef, 0xc6, 0xf0, 0x57, 0x4c, 0xfe, 0x96, 0x3d, 0x2e, 0xd6,
	0xca, 0x6b, 0xc8, 0x0b, 0x53, 0x05, 0x02, 0x9f, 0x07, 0x52, 0xd4, 0xed, 0xf4, 0x93, 0xc1, 0xfe,
	0xb0, 0x27, 0x62, 0x45, 0x62, 0x5b, 0x91, 0x18, 0x21, 0x9a, 0x0f, 0xca, 0x54, 0x30, 0x7f, 0x14,
	0x63, 0xc7, 0x31, 0xb5, 0x20, 0x45, 0x3c, 0x65, 0x07, 0x97, 0x2c, 0x53, 0x06, 0x02, 0xbb, 0x85,
	0xdd, 0xfe, 0x27, 0x8c, 0xc7, 0x5c, 0x7a, 0x19, 0xab, 0x69, 0x47, 0xdf, 0x13, 0xb6, 0x7f, 0x6d,
	0x67, 0xde, 0x67, 0x4f, 0xd3, 0xd7, 0x8b, 0x2c, 0x9f, 0x4c, 0x8f, 0x67, 0x27, 0x93, 0xe9, 0x38,
	0x7f, 0x33, 0x99, 0x2f, 0xb2, 0x7c, 0xf6, 0x3e, 0x1b, 0xcf, 0x26, 0xd3, 0xf1, 0xc3, 0x5b, 0xfc,
	0x05, 0x7b, 0x16, 0x67, 0x7f, 0xb3, 0x24, 0xfc, 0x39, 0x7b, 0xd2, 0x86, 0x34, 0xea, 0xca, 0xb0,
	0x57, 0xff, 0xf2, 0x07, 0xa3, 0xed, 0xe8, 0x8c, 0x4e, 0x7f, 0xfc, 0x3c, 0x4c, 0x4e, 0xb3, 0xdd,
	0x6e, 0xd9, 0x7d, 0xd1, 0xff, 0x71, 0xcf, 0xcb, 0x3b, 0x4d, 0x37, 0xaf, 0x7e, 0x07, 0x00, 0x00,
	0xff, 0xff, 0xb4, 0x69, 0x4e, 0x19, 0x2a, 0x03, 0x00, 0x00,
}

func (this *ProxyLatency) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ProxyLatency)
	if !ok {
		that2, ok := that.(ProxyLatency)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Request != that1.Request {
		return false
	}
	if this.Response != that1.Response {
		return false
	}
	if !this.ChargeClusterStat.Equal(that1.ChargeClusterStat) {
		return false
	}
	if !this.ChargeListenerStat.Equal(that1.ChargeListenerStat) {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
