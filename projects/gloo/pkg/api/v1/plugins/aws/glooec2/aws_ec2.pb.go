// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: github.com/solo-io/gloo/projects/gloo/api/v1/plugins/aws/ec2/aws_ec2.proto

package glooec2

import (
	bytes "bytes"
	fmt "fmt"
	math "math"

	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	core "github.com/solo-io/solo-kit/pkg/api/v1/resources/core"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

// Upstream Spec for AWS Lambda Upstreams
// AWS Upstreams represent a collection of Lambda Functions for a particular AWS Account (IAM Role or User account)
// in a particular region
type UpstreamSpec struct {
	// The AWS Region where the desired EC2 instances exist
	Region string `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	// A [Gloo Secret Ref](https://gloo.solo.io/introduction/concepts/#Secrets) to an AWS Secret
	// AWS Secrets can be created with `glooctl secret create aws ...`
	// If the secret is created manually, it must conform to the following structure:
	//  ```
	//  access_key: <aws access key>
	//  secret_key: <aws secret key>
	//  ```
	SecretRef            core.ResourceRef `protobuf:"bytes,2,opt,name=secret_ref,json=secretRef,proto3" json:"secret_ref"`
	Filters              []*Filter        `protobuf:"bytes,3,rep,name=filters,proto3" json:"filters,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *UpstreamSpec) Reset()         { *m = UpstreamSpec{} }
func (m *UpstreamSpec) String() string { return proto.CompactTextString(m) }
func (*UpstreamSpec) ProtoMessage()    {}
func (*UpstreamSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc1fd6f1173c4563, []int{0}
}
func (m *UpstreamSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpstreamSpec.Unmarshal(m, b)
}
func (m *UpstreamSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpstreamSpec.Marshal(b, m, deterministic)
}
func (m *UpstreamSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpstreamSpec.Merge(m, src)
}
func (m *UpstreamSpec) XXX_Size() int {
	return xxx_messageInfo_UpstreamSpec.Size(m)
}
func (m *UpstreamSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_UpstreamSpec.DiscardUnknown(m)
}

var xxx_messageInfo_UpstreamSpec proto.InternalMessageInfo

func (m *UpstreamSpec) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *UpstreamSpec) GetSecretRef() core.ResourceRef {
	if m != nil {
		return m.SecretRef
	}
	return core.ResourceRef{}
}

func (m *UpstreamSpec) GetFilters() []*Filter {
	if m != nil {
		return m.Filters
	}
	return nil
}

type Filter struct {
	// Types that are valid to be assigned to Spec:
	//	*Filter_Key
	//	*Filter_KvPair_
	Spec                 isFilter_Spec `protobuf_oneof:"spec"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Filter) Reset()         { *m = Filter{} }
func (m *Filter) String() string { return proto.CompactTextString(m) }
func (*Filter) ProtoMessage()    {}
func (*Filter) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc1fd6f1173c4563, []int{1}
}
func (m *Filter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Filter.Unmarshal(m, b)
}
func (m *Filter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Filter.Marshal(b, m, deterministic)
}
func (m *Filter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Filter.Merge(m, src)
}
func (m *Filter) XXX_Size() int {
	return xxx_messageInfo_Filter.Size(m)
}
func (m *Filter) XXX_DiscardUnknown() {
	xxx_messageInfo_Filter.DiscardUnknown(m)
}

var xxx_messageInfo_Filter proto.InternalMessageInfo

type isFilter_Spec interface {
	isFilter_Spec()
	Equal(interface{}) bool
}

type Filter_Key struct {
	Key string `protobuf:"bytes,1,opt,name=key,proto3,oneof"`
}
type Filter_KvPair_ struct {
	KvPair *Filter_KvPair `protobuf:"bytes,2,opt,name=kv_pair,json=kvPair,proto3,oneof"`
}

func (*Filter_Key) isFilter_Spec()     {}
func (*Filter_KvPair_) isFilter_Spec() {}

func (m *Filter) GetSpec() isFilter_Spec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *Filter) GetKey() string {
	if x, ok := m.GetSpec().(*Filter_Key); ok {
		return x.Key
	}
	return ""
}

func (m *Filter) GetKvPair() *Filter_KvPair {
	if x, ok := m.GetSpec().(*Filter_KvPair_); ok {
		return x.KvPair
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Filter) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Filter_OneofMarshaler, _Filter_OneofUnmarshaler, _Filter_OneofSizer, []interface{}{
		(*Filter_Key)(nil),
		(*Filter_KvPair_)(nil),
	}
}

func _Filter_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Filter)
	// spec
	switch x := m.Spec.(type) {
	case *Filter_Key:
		_ = b.EncodeVarint(1<<3 | proto.WireBytes)
		_ = b.EncodeStringBytes(x.Key)
	case *Filter_KvPair_:
		_ = b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.KvPair); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Filter.Spec has unexpected type %T", x)
	}
	return nil
}

func _Filter_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Filter)
	switch tag {
	case 1: // spec.key
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Spec = &Filter_Key{x}
		return true, err
	case 2: // spec.kv_pair
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Filter_KvPair)
		err := b.DecodeMessage(msg)
		m.Spec = &Filter_KvPair_{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Filter_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Filter)
	// spec
	switch x := m.Spec.(type) {
	case *Filter_Key:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.Key)))
		n += len(x.Key)
	case *Filter_KvPair_:
		s := proto.Size(x.KvPair)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Filter_KvPair struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Filter_KvPair) Reset()         { *m = Filter_KvPair{} }
func (m *Filter_KvPair) String() string { return proto.CompactTextString(m) }
func (*Filter_KvPair) ProtoMessage()    {}
func (*Filter_KvPair) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc1fd6f1173c4563, []int{1, 0}
}
func (m *Filter_KvPair) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Filter_KvPair.Unmarshal(m, b)
}
func (m *Filter_KvPair) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Filter_KvPair.Marshal(b, m, deterministic)
}
func (m *Filter_KvPair) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Filter_KvPair.Merge(m, src)
}
func (m *Filter_KvPair) XXX_Size() int {
	return xxx_messageInfo_Filter_KvPair.Size(m)
}
func (m *Filter_KvPair) XXX_DiscardUnknown() {
	xxx_messageInfo_Filter_KvPair.DiscardUnknown(m)
}

var xxx_messageInfo_Filter_KvPair proto.InternalMessageInfo

func (m *Filter_KvPair) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Filter_KvPair) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func init() {
	proto.RegisterType((*UpstreamSpec)(nil), "aws_ec2.plugins.gloo.solo.io.UpstreamSpec")
	proto.RegisterType((*Filter)(nil), "aws_ec2.plugins.gloo.solo.io.Filter")
	proto.RegisterType((*Filter_KvPair)(nil), "aws_ec2.plugins.gloo.solo.io.Filter.KvPair")
}

func init() {
	proto.RegisterFile("github.com/solo-io/gloo/projects/gloo/api/v1/plugins/aws/ec2/aws_ec2.proto", fileDescriptor_fc1fd6f1173c4563)
}

var fileDescriptor_fc1fd6f1173c4563 = []byte{
	// 353 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x52, 0xc1, 0x4a, 0xeb, 0x40,
	0x14, 0x6d, 0x5e, 0xfb, 0x52, 0x3a, 0x7d, 0x8b, 0xc7, 0x50, 0xa4, 0x16, 0xd1, 0x52, 0x5c, 0x14,
	0xd4, 0x19, 0x8d, 0xfb, 0x2e, 0x8a, 0x94, 0x52, 0x37, 0x32, 0xe2, 0xc6, 0x4d, 0x49, 0x87, 0x9b,
	0x38, 0x26, 0xed, 0x1d, 0x66, 0x92, 0x88, 0x3f, 0xe3, 0x52, 0xfc, 0x14, 0xbf, 0xc2, 0x85, 0x5f,
	0x22, 0xc9, 0xb4, 0xe2, 0xa2, 0x48, 0x57, 0xf7, 0x9e, 0x9b, 0x73, 0xee, 0x39, 0xe1, 0x0e, 0x99,
	0xc5, 0x2a, 0x7b, 0xc8, 0x17, 0x4c, 0xe2, 0x92, 0x5b, 0x4c, 0xf1, 0x4c, 0x21, 0x8f, 0x53, 0x44,
	0xae, 0x0d, 0x3e, 0x82, 0xcc, 0xac, 0x43, 0xa1, 0x56, 0xbc, 0xb8, 0xe0, 0x3a, 0xcd, 0x63, 0xb5,
	0xb2, 0x3c, 0x7c, 0xb2, 0x1c, 0x64, 0x50, 0xd6, 0x39, 0xc8, 0x80, 0x69, 0x83, 0x19, 0xd2, 0x83,
	0x6f, 0xe8, 0x68, 0xac, 0x94, 0xb2, 0x72, 0x2b, 0x53, 0xd8, 0xeb, 0xc4, 0x18, 0x63, 0x45, 0xe4,
	0x65, 0xe7, 0x34, 0xbd, 0xd3, 0x2d, 0xfe, 0x55, 0x4d, 0x54, 0xb6, 0x71, 0x35, 0x10, 0x39, 0xf6,
	0xe0, 0xd5, 0x23, 0xff, 0xee, 0xb4, 0xcd, 0x0c, 0x84, 0xcb, 0x5b, 0x0d, 0x92, 0xee, 0x11, 0xdf,
	0x40, 0xac, 0x70, 0xd5, 0xf5, 0xfa, 0xde, 0xb0, 0x25, 0xd6, 0x88, 0x8e, 0x08, 0xb1, 0x20, 0x0d,
	0x64, 0x73, 0x03, 0x51, 0xf7, 0x4f, 0xdf, 0x1b, 0xb6, 0x83, 0x7d, 0x26, 0xd1, 0xc0, 0x26, 0x0f,
	0x13, 0x60, 0x31, 0x37, 0x12, 0x04, 0x44, 0xe3, 0xc6, 0xfb, 0xc7, 0x51, 0x4d, 0xb4, 0x9c, 0x44,
	0x40, 0x44, 0x47, 0xa4, 0x19, 0xa9, 0x34, 0x03, 0x63, 0xbb, 0xf5, 0x7e, 0x7d, 0xd8, 0x0e, 0x8e,
	0xd9, 0x6f, 0x3f, 0xc7, 0x26, 0x15, 0x59, 0x6c, 0x44, 0x83, 0x17, 0x8f, 0xf8, 0x6e, 0x46, 0x29,
	0xa9, 0x27, 0xf0, 0xec, 0xf2, 0x4d, 0x6b, 0xa2, 0x04, 0x74, 0x42, 0x9a, 0x49, 0x31, 0xd7, 0xa1,
	0x32, 0xeb, 0x6c, 0x27, 0xbb, 0xac, 0x67, 0xd7, 0xc5, 0x4d, 0xa8, 0xcc, 0xb4, 0x26, 0xfc, 0xa4,
	0xea, 0x7a, 0xe7, 0xc4, 0x77, 0x33, 0xfa, 0xff, 0x87, 0x8b, 0xf3, 0xe8, 0x90, 0xbf, 0x45, 0x98,
	0xe6, 0x50, 0x39, 0xb4, 0x84, 0x03, 0x63, 0x9f, 0x34, 0xac, 0x06, 0x39, 0x9e, 0xbd, 0x7d, 0x1e,
	0x7a, 0xf7, 0x57, 0xbb, 0x5d, 0x5f, 0x27, 0xf1, 0xb6, 0x17, 0x50, 0x7e, 0x03, 0x19, 0x2c, 0xfc,
	0xea, 0x38, 0x97, 0x5f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xf0, 0x01, 0xc3, 0x1f, 0x4c, 0x02, 0x00,
	0x00,
}

func (this *UpstreamSpec) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*UpstreamSpec)
	if !ok {
		that2, ok := that.(UpstreamSpec)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Region != that1.Region {
		return false
	}
	if !this.SecretRef.Equal(&that1.SecretRef) {
		return false
	}
	if len(this.Filters) != len(that1.Filters) {
		return false
	}
	for i := range this.Filters {
		if !this.Filters[i].Equal(that1.Filters[i]) {
			return false
		}
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *Filter) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Filter)
	if !ok {
		that2, ok := that.(Filter)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if that1.Spec == nil {
		if this.Spec != nil {
			return false
		}
	} else if this.Spec == nil {
		return false
	} else if !this.Spec.Equal(that1.Spec) {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *Filter_Key) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Filter_Key)
	if !ok {
		that2, ok := that.(Filter_Key)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Key != that1.Key {
		return false
	}
	return true
}
func (this *Filter_KvPair_) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Filter_KvPair_)
	if !ok {
		that2, ok := that.(Filter_KvPair_)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.KvPair.Equal(that1.KvPair) {
		return false
	}
	return true
}
func (this *Filter_KvPair) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Filter_KvPair)
	if !ok {
		that2, ok := that.(Filter_KvPair)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Key != that1.Key {
		return false
	}
	if this.Value != that1.Value {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
