// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: github.com/solo-io/gloo/projects/gloo/api/v1/plugins/shadowing/shadowing.proto

package shadowing

import (
	bytes "bytes"
	fmt "fmt"
	math "math"

	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/gogo/protobuf/types"
	core "github.com/solo-io/solo-kit/pkg/api/v1/resources/core"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

// Specifies traffic shadowing configuration for the associated route.
// If set, Envoy will send a portion of the route's traffic to the shadowed upstream. This can be a useful way to
// preview a new service's behavior before putting the service in the critical path.
// Note that this plugin is only applicable to routes with upstream destinations (not redirect or direct response routes).
// See here for additional information on Envoy's shadowing capabilities: https://www.envoyproxy.io/docs/envoy/latest/api-v2/api/v2/route/route.proto#envoy-api-msg-route-routeaction-requestmirrorpolicy
type RouteShadowing struct {
	// The upstream to which the shadowed traffic should be sent.
	UpstreamRef *core.ResourceRef `protobuf:"bytes,1,opt,name=upstream_ref,json=upstreamRef,proto3" json:"upstream_ref,omitempty"`
	// The percent (represented as an integer between 0 and 100) of traffic that should be shadowed.
	Percent              uint32   `protobuf:"varint,2,opt,name=percent,proto3" json:"percent,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RouteShadowing) Reset()         { *m = RouteShadowing{} }
func (m *RouteShadowing) String() string { return proto.CompactTextString(m) }
func (*RouteShadowing) ProtoMessage()    {}
func (*RouteShadowing) Descriptor() ([]byte, []int) {
	return fileDescriptor_0db98eecee20047e, []int{0}
}
func (m *RouteShadowing) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RouteShadowing.Unmarshal(m, b)
}
func (m *RouteShadowing) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RouteShadowing.Marshal(b, m, deterministic)
}
func (m *RouteShadowing) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RouteShadowing.Merge(m, src)
}
func (m *RouteShadowing) XXX_Size() int {
	return xxx_messageInfo_RouteShadowing.Size(m)
}
func (m *RouteShadowing) XXX_DiscardUnknown() {
	xxx_messageInfo_RouteShadowing.DiscardUnknown(m)
}

var xxx_messageInfo_RouteShadowing proto.InternalMessageInfo

func (m *RouteShadowing) GetUpstreamRef() *core.ResourceRef {
	if m != nil {
		return m.UpstreamRef
	}
	return nil
}

func (m *RouteShadowing) GetPercent() uint32 {
	if m != nil {
		return m.Percent
	}
	return 0
}

func init() {
	proto.RegisterType((*RouteShadowing)(nil), "shadowing.plugins.gloo.solo.io.RouteShadowing")
}

func init() {
	proto.RegisterFile("github.com/solo-io/gloo/projects/gloo/api/v1/plugins/shadowing/shadowing.proto", fileDescriptor_0db98eecee20047e)
}

var fileDescriptor_0db98eecee20047e = []byte{
	// 259 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x90, 0xb1, 0x4e, 0xc3, 0x30,
	0x10, 0x86, 0x15, 0x06, 0x90, 0x52, 0x60, 0xa8, 0x18, 0x42, 0x87, 0xa8, 0x62, 0xea, 0x00, 0xb6,
	0x80, 0x95, 0xa9, 0x13, 0x13, 0x83, 0xd9, 0x58, 0x50, 0x92, 0x9e, 0x1d, 0xd3, 0x34, 0xbf, 0x75,
	0xb6, 0xe9, 0x2b, 0xf1, 0x5c, 0x3c, 0x09, 0x4a, 0x82, 0x05, 0x03, 0x95, 0x98, 0x7c, 0xbf, 0xef,
	0xf3, 0xe9, 0xf3, 0xe5, 0x4f, 0xc6, 0x86, 0x36, 0xd6, 0xa2, 0xc1, 0x4e, 0x7a, 0x74, 0xb8, 0xb1,
	0x90, 0xa6, 0x03, 0xa4, 0x63, 0xbc, 0x51, 0x13, 0xfc, 0x94, 0x2a, 0x67, 0xe5, 0xfb, 0xad, 0x74,
	0x5d, 0x34, 0xb6, 0xf7, 0xd2, 0xb7, 0xd5, 0x06, 0x7b, 0xdb, 0x9b, 0x9f, 0x4a, 0x38, 0x46, 0xc0,
	0xbc, 0xfc, 0x75, 0x31, 0xc1, 0x62, 0x18, 0x20, 0x86, 0xd9, 0xc2, 0x62, 0x71, 0x61, 0x60, 0x30,
	0xa2, 0x72, 0xa8, 0xa6, 0x57, 0x8b, 0xd2, 0x00, 0xa6, 0x23, 0x39, 0xa6, 0x3a, 0x6a, 0xb9, 0xe7,
	0xca, 0x39, 0x62, 0x7f, 0xa8, 0xbf, 0x89, 0x5c, 0x05, 0x8b, 0xfe, 0xbb, 0x7f, 0xfd, 0xc7, 0x2f,
	0xc6, 0x73, 0x6b, 0x43, 0x72, 0x67, 0xd2, 0x13, 0x7d, 0xd5, 0xe6, 0xe7, 0x0a, 0x31, 0xd0, 0x73,
	0x52, 0x9d, 0x3f, 0xe4, 0xa7, 0xd1, 0xf9, 0xc0, 0x54, 0xed, 0x5e, 0x99, 0x74, 0x91, 0x2d, 0xb3,
	0xd5, 0xec, 0xee, 0x52, 0x34, 0x60, 0x4a, 0xea, 0x42, 0x91, 0x47, 0xe4, 0x86, 0x14, 0x69, 0x35,
	0x4b, 0xb8, 0x22, 0x3d, 0x2f, 0xf2, 0x13, 0x47, 0xdc, 0x50, 0x1f, 0x8a, 0xa3, 0x65, 0xb6, 0x3a,
	0x53, 0x29, 0xae, 0x1f, 0x3f, 0x3e, 0xcb, 0xec, 0x65, 0xfd, 0xbf, 0x1d, 0xbb, 0xad, 0x39, 0xb8,
	0xe7, 0xfa, 0x78, 0x54, 0xbf, 0xff, 0x0a, 0x00, 0x00, 0xff, 0xff, 0x70, 0x26, 0xd5, 0x2c, 0xb0,
	0x01, 0x00, 0x00,
}

func (this *RouteShadowing) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*RouteShadowing)
	if !ok {
		that2, ok := that.(RouteShadowing)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.UpstreamRef.Equal(that1.UpstreamRef) {
		return false
	}
	if this.Percent != that1.Percent {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
