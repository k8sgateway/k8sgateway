// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: github.com/solo-io/gloo/projects/gateway/api/v1/gateway.proto

package v1

import (
	bytes "bytes"
	fmt "fmt"
	math "math"

	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
	v1 "github.com/solo-io/gloo/projects/gloo/pkg/api/v1"
	core "github.com/solo-io/solo-kit/pkg/api/v1/resources/core"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

//
//A gateway describes the routes to upstreams that are reachable via a specific port on the Gateway Proxy itself.
//
//Deprecated: see gateway.solo.io.v2.Gateway
type Gateway struct {
	// if set to false, only use virtual services with no ssl configured.
	// if set to true, only use virtual services with ssl configured.
	Ssl bool `protobuf:"varint,1,opt,name=ssl,proto3" json:"ssl,omitempty"` // Deprecated: Do not use.
	// names of the the virtual services, which contain the actual routes for the gateway
	// if the list is empty, all virtual services will apply to this gateway (with accordance to tls flag above).
	VirtualServices []core.ResourceRef `protobuf:"bytes,2,rep,name=virtual_services,json=virtualServices,proto3" json:"virtual_services"` // Deprecated: Do not use.
	// the bind address the gateway should serve traffic on
	BindAddress string `protobuf:"bytes,3,opt,name=bind_address,json=bindAddress,proto3" json:"bind_address,omitempty"` // Deprecated: Do not use.
	// bind ports must not conflict across gateways in a namespace
	BindPort uint32 `protobuf:"varint,4,opt,name=bind_port,json=bindPort,proto3" json:"bind_port,omitempty"` // Deprecated: Do not use.
	// top level plugin configuration for all routes on the gateway
	Plugins *v1.HttpListenerPlugins `protobuf:"bytes,5,opt,name=plugins,proto3" json:"plugins,omitempty"` // Deprecated: Do not use.
	// Status indicates the validation status of this resource.
	// Status is read-only by clients, and set by gloo during validation
	Status core.Status `protobuf:"bytes,6,opt,name=status,proto3" json:"status" testdiff:"ignore"` // Deprecated: Do not use.
	// Metadata contains the object metadata for this resource
	Metadata core.Metadata `protobuf:"bytes,7,opt,name=metadata,proto3" json:"metadata"` // Deprecated: Do not use.
	// Enable ProxyProtocol support for this listener
	UseProxyProto        *types.BoolValue `protobuf:"bytes,8,opt,name=use_proxy_proto,json=useProxyProto,proto3" json:"use_proxy_proto,omitempty"` // Deprecated: Do not use.
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Gateway) Reset()         { *m = Gateway{} }
func (m *Gateway) String() string { return proto.CompactTextString(m) }
func (*Gateway) ProtoMessage()    {}
func (*Gateway) Descriptor() ([]byte, []int) {
	return fileDescriptor_30f7529f6633771c, []int{0}
}
func (m *Gateway) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Gateway.Unmarshal(m, b)
}
func (m *Gateway) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Gateway.Marshal(b, m, deterministic)
}
func (m *Gateway) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Gateway.Merge(m, src)
}
func (m *Gateway) XXX_Size() int {
	return xxx_messageInfo_Gateway.Size(m)
}
func (m *Gateway) XXX_DiscardUnknown() {
	xxx_messageInfo_Gateway.DiscardUnknown(m)
}

var xxx_messageInfo_Gateway proto.InternalMessageInfo

// Deprecated: Do not use.
func (m *Gateway) GetSsl() bool {
	if m != nil {
		return m.Ssl
	}
	return false
}

// Deprecated: Do not use.
func (m *Gateway) GetVirtualServices() []core.ResourceRef {
	if m != nil {
		return m.VirtualServices
	}
	return nil
}

// Deprecated: Do not use.
func (m *Gateway) GetBindAddress() string {
	if m != nil {
		return m.BindAddress
	}
	return ""
}

// Deprecated: Do not use.
func (m *Gateway) GetBindPort() uint32 {
	if m != nil {
		return m.BindPort
	}
	return 0
}

// Deprecated: Do not use.
func (m *Gateway) GetPlugins() *v1.HttpListenerPlugins {
	if m != nil {
		return m.Plugins
	}
	return nil
}

// Deprecated: Do not use.
func (m *Gateway) GetStatus() core.Status {
	if m != nil {
		return m.Status
	}
	return core.Status{}
}

// Deprecated: Do not use.
func (m *Gateway) GetMetadata() core.Metadata {
	if m != nil {
		return m.Metadata
	}
	return core.Metadata{}
}

// Deprecated: Do not use.
func (m *Gateway) GetUseProxyProto() *types.BoolValue {
	if m != nil {
		return m.UseProxyProto
	}
	return nil
}

func init() {
	proto.RegisterType((*Gateway)(nil), "gateway.solo.io.Gateway")
}

func init() {
	proto.RegisterFile("github.com/solo-io/gloo/projects/gateway/api/v1/gateway.proto", fileDescriptor_30f7529f6633771c)
}

var fileDescriptor_30f7529f6633771c = []byte{
	// 504 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x93, 0xdd, 0x6a, 0x13, 0x41,
	0x14, 0xc7, 0xdd, 0x24, 0x26, 0xe9, 0xc4, 0x12, 0x1d, 0x42, 0x19, 0x23, 0x34, 0x31, 0x20, 0xe4,
	0x42, 0x77, 0x68, 0x7b, 0xa3, 0x01, 0x11, 0x73, 0xe1, 0x07, 0x54, 0x08, 0x29, 0x78, 0xe1, 0x4d,
	0x98, 0x24, 0x67, 0xc7, 0xb1, 0xdb, 0x9c, 0x65, 0x66, 0x36, 0xd1, 0xdb, 0x3e, 0x8d, 0x8f, 0xe2,
	0x4b, 0xd8, 0x0b, 0xdf, 0xa0, 0x3e, 0x81, 0xcc, 0xec, 0x6c, 0xa0, 0x20, 0x34, 0xbd, 0xda, 0x3d,
	0x1f, 0xbf, 0x73, 0xe6, 0x3f, 0x67, 0x0e, 0x79, 0x2d, 0x95, 0xfd, 0x9a, 0xcf, 0xe3, 0x05, 0x5e,
	0x70, 0x83, 0x29, 0xbe, 0x50, 0xc8, 0x65, 0x8a, 0xc8, 0x33, 0x8d, 0xdf, 0x60, 0x61, 0x0d, 0x97,
	0xc2, 0xc2, 0x46, 0xfc, 0xe0, 0x22, 0x53, 0x7c, 0x7d, 0x54, 0x9a, 0x71, 0xa6, 0xd1, 0x22, 0x6d,
	0x97, 0xa6, 0x63, 0x63, 0x85, 0xdd, 0x43, 0x89, 0x28, 0x53, 0xe0, 0x3e, 0x3c, 0xcf, 0x13, 0xbe,
	0xd1, 0x22, 0xcb, 0x40, 0x9b, 0x02, 0xe8, 0x76, 0x24, 0x4a, 0xf4, 0xbf, 0xdc, 0xfd, 0x05, 0xef,
	0xd1, 0x7f, 0x4e, 0xe1, 0xbf, 0xe7, 0xca, 0x96, 0x8d, 0x2f, 0xc0, 0x8a, 0xa5, 0xb0, 0x22, 0x20,
	0x7c, 0x07, 0xc4, 0x58, 0x61, 0xf3, 0xb2, 0xf3, 0xf3, 0x1d, 0x00, 0x0d, 0xc9, 0x1d, 0x4e, 0x54,
	0xda, 0x01, 0x79, 0x79, 0xfb, 0x55, 0x3a, 0x2b, 0xc0, 0x99, 0xc6, 0xef, 0xe1, 0x16, 0xbb, 0xa3,
	0xbb, 0x91, 0x69, 0x2e, 0xd5, 0x2a, 0xc8, 0x1a, 0xfc, 0xae, 0x92, 0xc6, 0xfb, 0x62, 0x08, 0xb4,
	0x43, 0xaa, 0xc6, 0xa4, 0x2c, 0xea, 0x47, 0xc3, 0xe6, 0xb8, 0xc2, 0xa2, 0xa9, 0x33, 0xe9, 0x29,
	0x79, 0xb8, 0x56, 0xda, 0xe6, 0x22, 0x9d, 0x19, 0xd0, 0x6b, 0xb5, 0x00, 0xc3, 0x2a, 0xfd, 0xea,
	0xb0, 0x75, 0xfc, 0x38, 0x5e, 0xa0, 0x86, 0x72, 0x76, 0xf1, 0x14, 0x0c, 0xe6, 0x7a, 0x01, 0x53,
	0x48, 0xc6, 0xf5, 0x5f, 0x57, 0xbd, 0x7b, 0x2c, 0x9a, 0xb6, 0x03, 0x7a, 0x16, 0x48, 0xfa, 0x8c,
	0x3c, 0x98, 0xab, 0xd5, 0x72, 0x26, 0x96, 0x4b, 0x0d, 0xc6, 0xb0, 0x6a, 0x3f, 0x1a, 0xee, 0xf9,
	0x66, 0x2d, 0xe7, 0x7f, 0x5b, 0xb8, 0x69, 0x8f, 0xec, 0xf9, 0xb4, 0x0c, 0xb5, 0x65, 0xb5, 0x7e,
	0x34, 0xdc, 0xf7, 0x39, 0x4d, 0xe7, 0x9c, 0xa0, 0xb6, 0xf4, 0x0d, 0x69, 0x04, 0x21, 0xec, 0x7e,
	0x3f, 0x1a, 0xb6, 0x8e, 0x9f, 0xc6, 0x4e, 0xe4, 0xf6, 0x30, 0x1f, 0xac, 0xcd, 0x4e, 0x95, 0xb1,
	0xb0, 0x02, 0x3d, 0x29, 0x12, 0x7d, 0x85, 0x92, 0xa2, 0x1f, 0x49, 0xbd, 0x98, 0x2f, 0xab, 0x7b,
	0xbe, 0x73, 0x53, 0xcc, 0x99, 0x8f, 0x8d, 0x9f, 0x38, 0x1d, 0x7f, 0xaf, 0x7a, 0x8f, 0x2c, 0x18,
	0xbb, 0x54, 0x49, 0x32, 0x1a, 0x28, 0xb9, 0x42, 0x0d, 0x03, 0x16, 0x4d, 0x43, 0x01, 0x3a, 0x22,
	0xcd, 0xf2, 0x75, 0xb1, 0x86, 0x2f, 0x76, 0x70, 0xb3, 0xd8, 0xa7, 0x10, 0xdd, 0x5e, 0xcb, 0x36,
	0x9f, 0xbe, 0x23, 0xed, 0xdc, 0xc0, 0xcc, 0x8f, 0x73, 0xe6, 0x47, 0xc2, 0x9a, 0xbe, 0x44, 0x37,
	0x2e, 0x56, 0x21, 0x2e, 0x57, 0x21, 0x1e, 0x23, 0xa6, 0x9f, 0x45, 0x9a, 0x83, 0x17, 0xb2, 0x9f,
	0x1b, 0x98, 0x38, 0x6a, 0xe2, 0xe2, 0xa3, 0x83, 0xcb, 0xeb, 0x5a, 0x8d, 0x54, 0xe4, 0xe6, 0xf2,
	0xba, 0x46, 0x68, 0x33, 0xec, 0x95, 0x19, 0xbf, 0xfa, 0xf9, 0xe7, 0x30, 0xfa, 0x72, 0xb2, 0xf3,
	0x9a, 0x66, 0xe7, 0x32, 0x3c, 0x94, 0x79, 0xdd, 0x77, 0x3e, 0xf9, 0x17, 0x00, 0x00, 0xff, 0xff,
	0xdb, 0xd1, 0x1f, 0x4b, 0xe4, 0x03, 0x00, 0x00,
}

func (this *Gateway) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Gateway)
	if !ok {
		that2, ok := that.(Gateway)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Ssl != that1.Ssl {
		return false
	}
	if len(this.VirtualServices) != len(that1.VirtualServices) {
		return false
	}
	for i := range this.VirtualServices {
		if !this.VirtualServices[i].Equal(&that1.VirtualServices[i]) {
			return false
		}
	}
	if this.BindAddress != that1.BindAddress {
		return false
	}
	if this.BindPort != that1.BindPort {
		return false
	}
	if !this.Plugins.Equal(that1.Plugins) {
		return false
	}
	if !this.Status.Equal(&that1.Status) {
		return false
	}
	if !this.Metadata.Equal(&that1.Metadata) {
		return false
	}
	if !this.UseProxyProto.Equal(that1.UseProxyProto) {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
