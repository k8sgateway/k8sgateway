syntax = "proto3";
package gateway.solo.io;
option go_package = "github.com/solo-io/gloo/projects/gateway/pkg/api/v1";

import "google/protobuf/wrappers.proto";

import "gogoproto/gogo.proto";
option (gogoproto.equal_all) = true;

import "github.com/solo-io/solo-kit/api/v1/metadata.proto";
import "github.com/solo-io/solo-kit/api/v1/status.proto";
import "github.com/solo-io/solo-kit/api/v1/ref.proto";
import "github.com/solo-io/solo-kit/api/v1/solo-kit.proto";

import "github.com/solo-io/gloo/projects/gloo/api/v1/proxy.proto";
import "github.com/solo-io/gloo/projects/gloo/api/v1/plugins.proto";

/*
A gateway describes the routes to upstreams that are reachable via a specific port on the Gateway Proxy itself.

Deprecated: see gateway.solo.io.v2.Gateway
*/
message Gateway {
    option deprecated = true;
    option (core.solo.io.resource).short_name = "gw";
    option (core.solo.io.resource).plural_name = "gateways";
    // if set to false, only use virtual services with no ssl configured.
    // if set to true, only use virtual services with ssl configured.
    bool ssl = 1;

    // names of the the virtual services, which contain the actual routes for the gateway
    // if the list is empty, all virtual services will apply to this gateway (with accordance to tls flag above).
    repeated core.solo.io.ResourceRef virtual_services = 2 [(gogoproto.nullable) = false];

    // the bind address the gateway should serve traffic on
    string bind_address = 3;

    // bind ports must not conflict across gateways in a namespace
    uint32 bind_port = 4;

    // top level plugin configuration for all routes on the gateway
    gloo.solo.io.HttpListenerPlugins plugins = 5;

    // Status indicates the validation status of this resource.
    // Status is read-only by clients, and set by gloo during validation
    core.solo.io.Status status = 6 [(gogoproto.nullable) = false, (gogoproto.moretags) = "testdiff:\"ignore\""];

    // Metadata contains the object metadata for this resource
    core.solo.io.Metadata metadata = 7 [(gogoproto.nullable) = false];

    // Enable ProxyProtocol support for this listener
    google.protobuf.BoolValue use_proxy_proto = 8;
}
