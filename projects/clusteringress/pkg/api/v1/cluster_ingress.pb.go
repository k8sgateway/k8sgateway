// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: github.com/solo-io/gloo/projects/clusteringress/api/v1/cluster_ingress.proto

package v1 // import "github.com/solo-io/gloo/projects/clusteringress/pkg/api/v1"

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"
import types "github.com/gogo/protobuf/types"
import core "github.com/solo-io/solo-kit/pkg/api/v1/resources/core"

import bytes "bytes"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

//
// A simple wrapper for a kNative ClusterIngress Object.
type ClusterIngress struct {
	Metadata core.Metadata `protobuf:"bytes,1,opt,name=metadata" json:"metadata"`
	// a raw byte representation of the cluster ingress this resource wraps
	ClusterIngressSpec *types.Any `protobuf:"bytes,2,opt,name=cluster_ingress_spec,json=clusterIngressSpec" json:"cluster_ingress_spec,omitempty"`
	// a raw byte representation of the ingress status of the cluster ingress object
	ClusterIngressStatus *types.Any `protobuf:"bytes,3,opt,name=cluster_ingress_status,json=clusterIngressStatus" json:"cluster_ingress_status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ClusterIngress) Reset()         { *m = ClusterIngress{} }
func (m *ClusterIngress) String() string { return proto.CompactTextString(m) }
func (*ClusterIngress) ProtoMessage()    {}
func (*ClusterIngress) Descriptor() ([]byte, []int) {
	return fileDescriptor_cluster_ingress_4acb9461965c6e40, []int{0}
}
func (m *ClusterIngress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClusterIngress.Unmarshal(m, b)
}
func (m *ClusterIngress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClusterIngress.Marshal(b, m, deterministic)
}
func (dst *ClusterIngress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterIngress.Merge(dst, src)
}
func (m *ClusterIngress) XXX_Size() int {
	return xxx_messageInfo_ClusterIngress.Size(m)
}
func (m *ClusterIngress) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterIngress.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterIngress proto.InternalMessageInfo

func (m *ClusterIngress) GetMetadata() core.Metadata {
	if m != nil {
		return m.Metadata
	}
	return core.Metadata{}
}

func (m *ClusterIngress) GetClusterIngressSpec() *types.Any {
	if m != nil {
		return m.ClusterIngressSpec
	}
	return nil
}

func (m *ClusterIngress) GetClusterIngressStatus() *types.Any {
	if m != nil {
		return m.ClusterIngressStatus
	}
	return nil
}

func init() {
	proto.RegisterType((*ClusterIngress)(nil), "networking.internal.knative.dev.ClusterIngress")
}
func (this *ClusterIngress) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ClusterIngress)
	if !ok {
		that2, ok := that.(ClusterIngress)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Metadata.Equal(&that1.Metadata) {
		return false
	}
	if !this.ClusterIngressSpec.Equal(that1.ClusterIngressSpec) {
		return false
	}
	if !this.ClusterIngressStatus.Equal(that1.ClusterIngressStatus) {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}

func init() {
	proto.RegisterFile("github.com/solo-io/gloo/projects/clusteringress/api/v1/cluster_ingress.proto", fileDescriptor_cluster_ingress_4acb9461965c6e40)
}

var fileDescriptor_cluster_ingress_4acb9461965c6e40 = []byte{
	// 332 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x52, 0xcd, 0x4a, 0x33, 0x31,
	0x14, 0xfd, 0xa6, 0x9d, 0x4f, 0x64, 0x04, 0x91, 0x30, 0x94, 0xda, 0x85, 0x15, 0x57, 0x6e, 0x4c,
	0xa8, 0x6e, 0xa4, 0x2b, 0xad, 0x20, 0x08, 0x0a, 0x52, 0x77, 0x6e, 0x4a, 0x9a, 0x5e, 0x63, 0x9c,
	0x69, 0xee, 0x90, 0x64, 0x2a, 0xdd, 0x49, 0xc1, 0x77, 0xf1, 0x51, 0x7c, 0x0a, 0x17, 0xbe, 0x41,
	0xdf, 0x40, 0x9a, 0x99, 0x11, 0x5a, 0x75, 0xd1, 0x55, 0x72, 0x7f, 0xce, 0xc9, 0x39, 0x37, 0x37,
	0xba, 0x96, 0xca, 0x3d, 0xe6, 0x43, 0x2a, 0x70, 0xcc, 0x2c, 0xa6, 0x78, 0xa4, 0x90, 0xc9, 0x14,
	0x91, 0x65, 0x06, 0x9f, 0x40, 0x38, 0xcb, 0x44, 0x9a, 0x5b, 0x07, 0x46, 0x69, 0x69, 0xc0, 0x5a,
	0xc6, 0x33, 0xc5, 0x26, 0x9d, 0x2a, 0x3b, 0x28, 0xd3, 0x34, 0x33, 0xe8, 0x90, 0xb4, 0x35, 0xb8,
	0x67, 0x34, 0x89, 0xd2, 0x92, 0x2a, 0xed, 0xc0, 0x68, 0x9e, 0xd2, 0x44, 0x73, 0xa7, 0x26, 0x40,
	0x47, 0x30, 0x69, 0xc5, 0x12, 0x25, 0xfa, 0x5e, 0xb6, 0xb8, 0x15, 0xb0, 0xd6, 0xae, 0x44, 0x94,
	0x29, 0x30, 0x1f, 0x0d, 0xf3, 0x07, 0xc6, 0xf5, 0xb4, 0x2c, 0x75, 0x7e, 0xd1, 0xe7, 0xcf, 0x44,
	0xb9, 0x4a, 0xcb, 0x18, 0x1c, 0x1f, 0x71, 0xc7, 0xd7, 0x80, 0x54, 0x71, 0x01, 0x39, 0x78, 0xad,
	0x45, 0xdb, 0x17, 0x85, 0xa3, 0xab, 0xc2, 0x10, 0x39, 0x8d, 0x36, 0x2b, 0xde, 0x66, 0xb0, 0x1f,
	0x1c, 0x6e, 0x1d, 0x37, 0xa8, 0x40, 0x03, 0x74, 0x01, 0xa5, 0x0a, 0xe9, 0x4d, 0x59, 0xed, 0x85,
	0xef, 0x1f, 0xed, 0x7f, 0xfd, 0xef, 0x6e, 0x72, 0x19, 0xc5, 0x2b, 0xd3, 0x19, 0xd8, 0x0c, 0x44,
	0xb3, 0xe6, 0x59, 0x62, 0x5a, 0x98, 0xa5, 0x95, 0x59, 0x7a, 0xae, 0xa7, 0x7d, 0x22, 0x96, 0x5e,
	0xbf, 0xcb, 0x40, 0x90, 0xdb, 0xa8, 0xf1, 0x83, 0xc7, 0x71, 0x97, 0xdb, 0x66, 0xfd, 0x6f, 0xa6,
	0x5e, 0xf8, 0x32, 0x0f, 0x83, 0x7e, 0xbc, 0xc2, 0xe7, 0x71, 0xdd, 0xf6, 0x6c, 0x1e, 0xfe, 0x8f,
	0xea, 0x42, 0xc9, 0xd9, 0x3c, 0x24, 0x64, 0x67, 0xf9, 0x6b, 0xc1, 0xf6, 0xce, 0xde, 0x3e, 0xf7,
	0x82, 0xfb, 0xee, 0xba, 0x3b, 0x91, 0x25, 0xb2, 0x1c, 0xec, 0x70, 0xc3, 0x8b, 0x39, 0xf9, 0x0a,
	0x00, 0x00, 0xff, 0xff, 0xe9, 0x06, 0xa4, 0x92, 0x58, 0x02, 0x00, 0x00,
}
