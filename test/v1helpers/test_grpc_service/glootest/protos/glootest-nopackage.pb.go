// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protos/glootest-nopackage.proto

package glootest

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TestRequest2 struct {
	Str                  string   `protobuf:"bytes,1,opt,name=str,proto3" json:"str,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestRequest2) Reset()         { *m = TestRequest2{} }
func (m *TestRequest2) String() string { return proto.CompactTextString(m) }
func (*TestRequest2) ProtoMessage()    {}
func (*TestRequest2) Descriptor() ([]byte, []int) {
	return fileDescriptor_e98ca3c103878df4, []int{0}
}

func (m *TestRequest2) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestRequest2.Unmarshal(m, b)
}
func (m *TestRequest2) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestRequest2.Marshal(b, m, deterministic)
}
func (m *TestRequest2) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestRequest2.Merge(m, src)
}
func (m *TestRequest2) XXX_Size() int {
	return xxx_messageInfo_TestRequest2.Size(m)
}
func (m *TestRequest2) XXX_DiscardUnknown() {
	xxx_messageInfo_TestRequest2.DiscardUnknown(m)
}

var xxx_messageInfo_TestRequest2 proto.InternalMessageInfo

func (m *TestRequest2) GetStr() string {
	if m != nil {
		return m.Str
	}
	return ""
}

type TestResponse2 struct {
	Str                  string   `protobuf:"bytes,1,opt,name=str,proto3" json:"str,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestResponse2) Reset()         { *m = TestResponse2{} }
func (m *TestResponse2) String() string { return proto.CompactTextString(m) }
func (*TestResponse2) ProtoMessage()    {}
func (*TestResponse2) Descriptor() ([]byte, []int) {
	return fileDescriptor_e98ca3c103878df4, []int{1}
}

func (m *TestResponse2) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestResponse2.Unmarshal(m, b)
}
func (m *TestResponse2) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestResponse2.Marshal(b, m, deterministic)
}
func (m *TestResponse2) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestResponse2.Merge(m, src)
}
func (m *TestResponse2) XXX_Size() int {
	return xxx_messageInfo_TestResponse2.Size(m)
}
func (m *TestResponse2) XXX_DiscardUnknown() {
	xxx_messageInfo_TestResponse2.DiscardUnknown(m)
}

var xxx_messageInfo_TestResponse2 proto.InternalMessageInfo

func (m *TestResponse2) GetStr() string {
	if m != nil {
		return m.Str
	}
	return ""
}

func init() {
	proto.RegisterType((*TestRequest2)(nil), "TestRequest2")
	proto.RegisterType((*TestResponse2)(nil), "TestResponse2")
}

func init() { proto.RegisterFile("protos/glootest-nopackage.proto", fileDescriptor_e98ca3c103878df4) }

var fileDescriptor_e98ca3c103878df4 = []byte{
	// 143 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x2f, 0x28, 0xca, 0x2f,
	0xc9, 0x2f, 0xd6, 0x4f, 0xcf, 0xc9, 0xcf, 0x2f, 0x49, 0x2d, 0x2e, 0xd1, 0xcd, 0xcb, 0x2f, 0x48,
	0x4c, 0xce, 0x4e, 0x4c, 0x4f, 0xd5, 0x03, 0xcb, 0x28, 0x29, 0x70, 0xf1, 0x84, 0xa4, 0x16, 0x97,
	0x04, 0xa5, 0x16, 0x96, 0xa6, 0x16, 0x97, 0x18, 0x09, 0x09, 0x70, 0x31, 0x17, 0x97, 0x14, 0x49,
	0x30, 0x2a, 0x30, 0x6a, 0x70, 0x06, 0x81, 0x98, 0x4a, 0x8a, 0x5c, 0xbc, 0x10, 0x15, 0xc5, 0x05,
	0xf9, 0x79, 0xc5, 0xa9, 0x58, 0x94, 0x18, 0xd9, 0x41, 0x0c, 0x09, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c,
	0x4e, 0x35, 0x12, 0xd2, 0xe3, 0xe2, 0x06, 0xf1, 0x7d, 0x53, 0x4b, 0x32, 0xf2, 0x53, 0x8c, 0x84,
	0x78, 0xf5, 0x90, 0xad, 0x90, 0xe2, 0xd3, 0x43, 0x31, 0x4f, 0x89, 0x21, 0x89, 0x0d, 0xec, 0x16,
	0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x82, 0x13, 0xa6, 0x4b, 0xae, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TestService2Client is the client API for TestService2 service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TestService2Client interface {
	TestMethod2(ctx context.Context, in *TestRequest2, opts ...grpc.CallOption) (*TestResponse2, error)
}

type testService2Client struct {
	cc *grpc.ClientConn
}

func NewTestService2Client(cc *grpc.ClientConn) TestService2Client {
	return &testService2Client{cc}
}

func (c *testService2Client) TestMethod2(ctx context.Context, in *TestRequest2, opts ...grpc.CallOption) (*TestResponse2, error) {
	out := new(TestResponse2)
	err := c.cc.Invoke(ctx, "/TestService2/TestMethod2", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TestService2Server is the server API for TestService2 service.
type TestService2Server interface {
	TestMethod2(context.Context, *TestRequest2) (*TestResponse2, error)
}

func RegisterTestService2Server(s *grpc.Server, srv TestService2Server) {
	s.RegisterService(&_TestService2_serviceDesc, srv)
}

func _TestService2_TestMethod2_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TestRequest2)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TestService2Server).TestMethod2(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/TestService2/TestMethod2",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TestService2Server).TestMethod2(ctx, req.(*TestRequest2))
	}
	return interceptor(ctx, in, info, handler)
}

var _TestService2_serviceDesc = grpc.ServiceDesc{
	ServiceName: "TestService2",
	HandlerType: (*TestService2Server)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "TestMethod2",
			Handler:    _TestService2_TestMethod2_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protos/glootest-nopackage.proto",
}
