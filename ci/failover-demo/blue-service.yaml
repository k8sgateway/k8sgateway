apiVersion: v1
kind: Service
metadata:
  labels:
    app: bluegreen
  name: service-blue
  namespace: default
spec:
  clusterIP: 10.96.10.40
  ports:
    - name: color
      port: 10000
      protocol: TCP
      targetPort: 10000
  selector:
    app: bluegreen
    text: blue
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: bluegreen
    text: blue
  name: echo-blue-deployment
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: bluegreen
      text: blue
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: bluegreen
        text: blue
    spec:
      containers:
        - args:
            - -text="blue-pod"
          image: hashicorp/http-echo@sha256:ba27d460cd1f22a1a4331bdf74f4fccbc025552357e8a3249c40ae216275de96
          imagePullPolicy: IfNotPresent
          name: echo
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - args:
            - --config-yaml
            - |2

              node:
               cluster: ingress
               id: "ingress~for-testing"
               metadata:
                role: "default~proxy"
              static_resources:
                listeners:
                - name: listener_0
                  address:
                    socket_address: { address: 0.0.0.0, port_value: 10000 }
                  filter_chains:
                  - filters:
                    - name: envoy.filters.network.http_connection_manager
                      typed_config:
                        "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                        stat_prefix: ingress_http
                        codec_type: AUTO
                        route_config:
                          name: local_route
                          virtual_hosts:
                          - name: local_service
                            domains: ["*"]
                            routes:
                            - match: { prefix: "/" }
                              route: { cluster: some_service }
                        http_filters:
                        - name: envoy.filters.http.health_check
                          typed_config:
                            "@type": type.googleapis.com/envoy.extensions.filters.http.health_check.v3.HealthCheck
                            pass_through_mode: true
                        - name: envoy.filters.http.router
                clusters:
                - name: some_service
                  connect_timeout: 0.25s
                  type: STATIC
                  lb_policy: ROUND_ROBIN
                  load_assignment:
                    cluster_name: some_service
                    endpoints:
                    - lb_endpoints:
                      - endpoint:
                          address:
                            socket_address:
                              address: 0.0.0.0
                              port_value: 5678
              admin:
                access_log_path: /dev/null
                address:
                  socket_address:
                    address: 0.0.0.0
                    port_value: 19000
            - --disable-hot-restart
            - --log-level
            - debug
            - --concurrency
            - "1"
            - --file-flush-interval-msec
            - "10"
          image: envoyproxy/envoy:v1.14.2
          imagePullPolicy: IfNotPresent
          name: envoy
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 0
---
#apiVersion: gloo.solo.io/v1
#kind: Upstream
#metadata:
#  name: default-service-blue
#  namespace: gloo-system
#spec:
#  discoveryMetadata: {}
#  healthChecks:
#    - healthyThreshold: 1
#      httpHealthCheck:
#        path: /health
#      interval: 1s
#      noTrafficInterval: 1s
#      timeout: 1s
#      unhealthyThreshold: 1
#  kube:
#    selector:
#      app: bluegreen
#      text: blue
#    serviceName: service-blue
#    serviceNamespace: default
#    servicePort: 10000
